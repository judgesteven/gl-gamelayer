openapi: 3.0.0
info:
  version: 1.4.0
  title: GameLayer API Specification
  description: |
    This is the API specification for GameLayer's gamification and rewards platform.

    # Authentication

    You authenticate to the GameLayer API by providing your secret API key in the request 
    header ```api-key``` 

    The API key will be provided when you sign up for a GameLayer account.

    In case the account ID does not match with the API key, HTTP status 401, 
    Not Authorized will be the response.

    # Errors

    The API uses standard HTTP status codes to indicate the success or failure of an API call. 
    The body of the response will be JSON in the following format:

    ```
    {
        "error": "Player 'player-520' exists for account 'docs-for-devs'",
        "errorCode": 22
    }      
    ```
    # Refresh Offset
    When a player is registered or altered, a refreshOffset property can be provided. 
    The refresh offset is provided in format UTC+02:00. Valid range is UTC-12:00 to UTC+14:00.

    If a refreshOffset property is provided for a player, refresh operations for a player will be done
    based on refresh offset. Example: a player has refresh offset set to UTC+04:00, refresh will be done
    at UTC+04:00.

    If no refreshOffset has been provided, refresh will happen at UTC+00:00.
  termsOfService: 'https://www.gamelayer.co/'
  contact:
    name: GameLayer API Team
    email: api@gamelayer.co
servers:
  - url: 'https://api.gamelayer.co/api/v0'
security:
  - api_key: []
tags:
  - name: Achievements
    x-displayName: Achievements
    description: |
      Achievements are all about recognition and accomplishment! They give 
      users that satisfying pat on the back for their progress, sparking 
      motivation to keep going. By breaking down goals into smaller, rewarding
      steps, achievements keep the journey exciting and encourage users to 
      level up their skills. Plus, showing off those badges boosts a sense of 
      friendly competition and community, making it fun for everyone to stay 
      engaged.
  - name: Analytics
    x-displayName: Analytics
    description: |
      Where all the action comes to life in numbers! Here, we track every 
      interaction with the different game mechanics, from mission completions 
      to level-ups, giving you a clear view of how players are engaging and 
      what’s keeping them motivated. Dive into the data to uncover patterns, 
      spot trends, and fine-tune your gamified experience. With these insights, 
      you’ll have everything you need to keep the excitement going and make 
      every player’s journey even better!
  - name: Events
    x-displayName: Events
    description: |
      Events are any meaningful actions your users take in the system—
      whether it’s something as simple as clicking a button or as involved as 
      finishing an online training course. Events are at the heart of GameLayer,
      driving everything that happens! Each time a player triggers an event, it 
      sets off a chain reaction: completing missions, earning rewards, 
      unlocking badges, racking up XP, levelling up—you name it!

      Events can processed just once (non-recurring) or as many times as 
      players keep coming back (recurring). For recurring events, GameLayer 
      keeps the action going each time they’re triggered, but for one-time 
      events, it just marks them off and moves on once they have been handled.
      If you’ve got something super detailed—like tracking steps—you can even
      bundle those events together to keep things neat and pass them in 
      batches using the API.
  - name: Leaderboards
    x-displayName: Leaderboards
    description: |
      Leaderboards bring out everyone’s competitive side! They let users see 
      how they stack up against others, creating that drive to reach the top. 
      With instant feedback, users can track their progress, push for higher 
      ranks, and enjoy some friendly rivalry. Leaderboards don’t just spark 
      competition—they also bring people together, creating a lively, 
      interactive community where everyone’s striving to be the best.
  - name: Levels
    x-displayName: Levels
    description: |
      Levels give users a clear sense of progress and accomplishment. As they 
      move up, they feel a rewarding sense of growth, making each step 
      forward exciting. By breaking tasks into stages, levels keep things 
      manageable and engaging, with new rewards and challenges along the 
      way. Users stay motivated to reach that next level, building a sense of 
      mastery and commitment.
  - name: Missions
    x-displayName: Missions
    description: |
      Missions add a sense of purpose and urgency that drives users to dive in. 
      With clear, time-bound objectives, they’re perfect for pushing users to 
      focus, solve problems, and test their skills. There’s nothing quite like the 
      thrill of tackling a challenge and coming out on top! Missions also foster 
      teamwork and social interaction, making the experience even more 
      rewarding.
  - name: MysteryBoxes
    x-displayName: Mystery Boxes
    description: |
      Mystery boxes are all about surprise and anticipation! The thrill of not 
      knowing what’s inside keeps users coming back, hoping to uncover 
      something special. This element of chance adds excitement and a touch 
      of suspense, making every interaction feel fresh and fun. Mystery boxes 
      keep users engaged, always ready to see what’s next.
  - name: Players
    x-displayName: Players
    description: |
      You might call them users, customers or members, but at GameLayer, we 
      call them players—because they’re here to do more than just interact or 
      transact. Our players are the achievers, explorers, and go-getters in a 
      gamified world. Whether they’re tackling challenges, unlocking 
      achievements, or leveling up, players bring excitement and energy to 
      every interaction. In GameLayer-powered experiences, each player is on 
      a unique journey, creating a vibrant community fueled by rewards, 
      progress, competition and the thrill of reaching new heights.
  - name: Prizes
    x-displayName: Prizes
    description: |
      Prizes add that extra spark of motivation! Knowing there’s a tangible 
      reward up for grabs gets users excited and ready to go. Prizes appeal to 
      both internal pride and external rewards, creating a fulfilling experience.
      The thrill of potentially winning a prize keeps users engaged, making 
      them eager to achieve more
  - name: Quizzes
    x-displayName: Quizzes
    description: |
      Quizzes are the perfect mix of fun and learning! They challenge users to 
      test their knowledge, with instant feedback and scoring to boost that 
      sense of accomplishment. Quizzes tap into the competitive spirit, 
      encouraging users to score higher or compare with friends. With a blend 
      of challenge, learning, and instant rewards, quizzes keep users curious 
      and coming back for more.
  - name: Raffles
    x-displayName: Raffles
    description: |
      Raffles combine the excitement of chance with the lure of a reward. The 
      idea of winning something keeps users engaged and often coming back 
      to boost their odds. Raffles build a sense of community as participants 
      share the anticipation. Easy to join and full of suspense, raffles are a 
      great way to drive ongoing interest.
  - name: Rules
    x-displayName: Rules
    description: |
      Build rules to target specific player outcomes
  - name: Streaks
    x-displayName: Streaks
    description: |
      Streaks tap into the power of habit! By rewarding users for consecutive 
      engagement, streaks build momentum and encourage regular 
      interaction. No one wants to break a streak, so they keep coming back, 
      creating a rhythm that’s easy to maintain over time. Streaks offer a 
      simple yet powerful nudge to stay involved, making them a key 
      ingredient for long-term engagement.
  - name: Surveys
    x-displayName: Surveys
    description: |
      Surveys give users a voice, making them feel valued and involved. By 
      sharing their opinions, users feel like they’re influencing decisions, which
      builds engagement and connection. Surveys are quick, accessible, and 
      give instant feedback, creating a sense of community that keeps users 
      coming back.
  - name: Teams
    x-displayName: Teams
    description: |
      Teams bring people together, building a community around shared goals. 
      Working as a group keeps motivation high, with teammates cheering 
      each other on. The social dynamics make every challenge more enjoyable
      and rewarding, while friendly competition between teams adds an extra 
      layer of excitement. Being part of a team fosters a sense of belonging and
      shared success, making the journey all the more fun.
paths:
  '/achievements/{id}':
    get:
      description: |
        Retrieves the achievement with the specified ID within the given account
      operationId: getAchievement
      summary: Retrieves the specified achievement data within the given account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the achievement
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Achievement retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Achievement
                type: object
                required:
                  - id
                  - name
                  - description
                  - imgUrl
                  - tags
                  - category
                  - isAvailable
                  - steps
                  - reward
                  - requirement
                properties:
                  id:
                    type: string
                    description: ID of the achievement
                  name:
                    type: string
                    description: Name of the achievement
                  description:
                    type: string
                    description: Description of the achievement
                  tags:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                  category:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                  imgUrl:
                    type: string
                    description: URL of the achievement image
                  isAvailable:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                  steps:
                    type: integer
                    description: The number of steps required to grant the achievement
                  reward:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/reward'
                  requirement:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/requirement'
              examples:
                Get Achievement:
                  value:
                    description: Game On! You unlocked the Game Addict badge!!
                    category: ''
                    tags:
                      - gamer
                    isAvailable: true
                    steps: 10
                    id: game-addict
                    name: Game Addict
                    imgUrl: 'https://images.gamelayer.co/glimages/gltest/badge1.png'
                    requirement:
                      category: ''
                      tags: []
                      missions: []
                      achievements: []
                      level:
                        id: ''
                        ordinal: 0
                    reward:
                      points: 10
                      credits: 10
                      achievements: []
        '404':
          description: |
            Achievement not found or no elements matching the language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Achievements
  /achievements:
    get:
      description: |
        Retrieves achievements based on provided query within the given account
      operationId: getAllAchievements
      summary: Retrieves all achievements within the given account
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1prizes/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/3'
        - $ref: '#/paths/~1prizes/get/parameters/3'
        - $ref: '#/paths/~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/7'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
      responses:
        '200':
          description: |
            Achievements retrieved succesfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1achievements~1%7Bid%7D/get/responses/200/content/application~1json/schema'
              examples:
                Get Achievements:
                  value:
                    - description: Game On! You unlocked the Game Addict badge!!
                      category: ''
                      tags:
                        - gamer
                      isAvailable: true
                      steps: 10
                      id: game-addict
                      name: Game Addict
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/badge1.png'
                      requirement:
                        category: ''
                        tags: []
                        missions: []
                        achievements: []
                        level:
                          id: ''
                          ordinal: 0
                      reward:
                        points: 10
                        credits: 10
                        achievements: []
        '404':
          description: |
            Some elements are missing translations for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Achievements
  /analytics:
    get:
      description: |
        Retrieves analytics for the given account.
      operationId: getAnalytics
      summary: Retrieves analytics for the given account.
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
      responses:
        '200':
          description: |
            Analytics retrieved succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  players:
                    type: integer
                    description: Players in the account
                  missions:
                    type: integer
                    description: Completed missions
                  points:
                    type: integer
                    description: Points gained
                  credits:
                    type: integer
                    description: Credits gained
                  achievements:
                    type: integer
                    description: Completed achievements
                  levelUps:
                    type: integer
                    description: Level ups
                  prizeDraws:
                    type: integer
                    description: Prizes drawn
                  mysteryBoxes:
                    type: integer
                    description: Mystery boxes drawn
                  prizes:
                    type: integer
                    description: Redeemed prizes
                  apiCalls:
                    type: integer
                    description: API calls completed
      tags:
        - Analytics
  /analytics/activeplayers:
    get:
      description: |
        Retrieves active players for given account for given period.
        Only the date part of query parameters will be used and is required.
        Date is given in format YYYY-MM-DD. Example: 2022-09-01
      operationId: getActivePlayers
      summary: Retrieves active players for given account for given period.
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
        - name: startDate
          in: query
          required: true
          description: |
            Specifies the start date for the query.
          schema:
            type: string
        - name: endDate
          in: query
          required: true
          description: |
            Specifies the end date for the query.
          schema:
            type: string
      responses:
        '200':
          description: |
            Active player data retrieved succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  activePlayers:
                    type: integer
                    description: Active players for the given period.
        '400':
          description: Invalid request. Check start and end date in request.
      tags:
        - Analytics
  '/events/{id}/complete':
    post:
      description: |
        Completes the defined event for the specified player within the given account.
        If a language property is provided in the body, the response will contain 
        translated elements. In case no translations are found for the language, 
        default texts will be used in the response.
      operationId: completeEvent
      summary: Completes the specified event for the specified player within the given account
      parameters:
        - $ref: '#/paths/~1events~1%7Bid%7D/get/parameters/0'
      requestBody:
        description: Event completion details
        required: true
        content:
          application/json:
            schema:
              description: Complete Player Request
              type: object
              required:
                - player
                - account
              properties:
                account:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/account'
                player:
                  type: string
                  description: ID of the player
                count:
                  type: integer
                  description: |
                    Amount of completions for the event. If event is limited, player can complete
                    the event only the the amount of times specified by the event limitation
                  default: 1
                tags:
                  type: array
                  description: An array of tags
                  items:
                    type: string
                language:
                  $ref: '#/paths/~1prizes~1%7Bid%7D~1claim/post/requestBody/content/application~1json/schema/properties/language'
            examples:
              Complete Event:
                value:
                  player: player-080277
                  account: docs-for-devs
      responses:
        '200':
          description: Event completed
          content:
            application/json:
              schema:
                description: Response to Complete Event
                required:
                  - event
                  - player
                  - progress
                type: object
                properties:
                  event:
                    description: Basic event data
                    required:
                      - id
                      - name
                      - description
                      - category
                      - imgUrl
                      - isAvailable
                      - reward
                    properties:
                      id:
                        $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                      name:
                        $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                      description:
                        $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                      category:
                        $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                      isAvailable:
                        $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                      imgUrl:
                        $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                      reward:
                        $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/reward'
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  progress:
                    type: object
                    required:
                      - points
                      - credits
                      - achievements
                      - missions
                      - levels
                    properties:
                      points:
                        type: object
                        required:
                          - before
                          - earned
                        properties:
                          before:
                            type: integer
                            description: Points before action was started (event/survey/quiz)
                          earned:
                            type: integer
                            description: Points earned by completing the action
                      credits:
                        type: object
                        required:
                          - before
                          - earned
                        properties:
                          before:
                            type: integer
                            description: Credits before action was started
                          earned:
                            type: integer
                            description: Credits earned by completing the action
                      achievements:
                        type: array
                        description: List of achievements completed by completing the action
                        items:
                          type: object
                          description: Completed achievement
                          required:
                            - id
                            - name
                            - description
                            - imgUrl
                          properties:
                            id:
                              $ref: '#/paths/~1achievements~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                            name:
                              $ref: '#/paths/~1achievements~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                            description:
                              $ref: '#/paths/~1achievements~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                            imgUrl:
                              $ref: '#/paths/~1achievements~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                      missions:
                        type: array
                        description: List of missions completed by completing the action.
                        items:
                          type: object
                          description: Completed mission
                          required:
                            - id
                            - name
                            - description
                            - imgUrl
                          properties:
                            id:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                            name:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                            description:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                            imgUrl:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                      startedMissions:
                        type: array
                        description: List of started missions by completing the action.
                        items:
                          type: object
                          description: Started mission
                          required:
                            - id
                            - name
                            - description
                            - imgUrl
                          properties:
                            id:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                            name:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                            description:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                            imgUrl:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                      levels:
                        type: object
                        description: Levels completed / started by completing the action.
                        required:
                          - completed
                        properties:
                          completed:
                            type: array
                            description: List of levels completed as result of the completed action.
                            items:
                              type: object
                              properties:
                                id:
                                  $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                                name:
                                  $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                                description:
                                  $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                                imgUrl:
                                  $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                                ordinal:
                                  $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/ordinal'
                                startedOn:
                                  type: string
                                  description: Time when the level was started
                          started:
                            type: object
                            description: Set if level was started as result of the action. Otherwise not set.
                            properties:
                              id:
                                $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                              name:
                                $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                              description:
                                $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                              imgUrl:
                                $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                              ordinal:
                                $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/ordinal'
                              startedOn:
                                type: string
                                description: Time when the level was started
                      completedStreaks:
                        type: array
                        description: List of completed streaks when a mission was completed
                        items:
                          type: object
                          description: Completed streak
                          required:
                            - id
                            - name
                            - description
                            - imgUrl
                            - streakCount
                            - points
                            - credits
                            - startedOn
                            - completedOn
                          properties:
                            id:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                            name:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                            description:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                            imgUrl:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                            points:
                              type: integer
                              description: Points awarded upon completion of the streak
                            credits:
                              type: integer
                              description: Credits awarded upon completion of the streak
                            startedOn:
                              type: string
                              description: Time when the streak was started
                            completedOn:
                              type: string
                              description: Time when the streak was completed
                            lastStreakOn:
                              type: string
                              description: Time when the streak was hit last time
                      activeStreaks:
                        type: array
                        description: List of active streaks updated when a mission was completed
                        items:
                          type: object
                          description: Active streak
                          required:
                            - id
                            - name
                            - description
                            - imgUrl
                            - streakCount
                            - points
                            - credits
                            - startedOn
                          properties:
                            id:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                            name:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                            description:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                            imgUrl:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                            points:
                              type: integer
                              description: Points awarded upon completion of the streak
                            credits:
                              type: integer
                              description: Credits awarded upon completion of the streak
                            startedOn:
                              type: string
                              description: Time when the streak was started
                            lastStreakOn:
                              type: string
                              description: Time when the streak was hit last time
              examples:
                Post Complete Event Response:
                  value:
                    event:
                      description: ''
                      category: ''
                      imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                      isAvailable: true
                      limitCount: false
                      id: ev-2
                      name: ev-2
                      reward:
                        points: 1
                        credits: 0
                        achievements: []
                    player:
                      name: Str-2 Player
                      points: 697
                      credits: 0
                    progress:
                      points:
                        before: 662
                        earned: 35
                      credits:
                        before: 0
                        earned: 0
                      levels:
                        completed: []
                      missions:
                        - id: m-2
                          name: m-2
                          imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                          description: Mission driven by ev-2
                          points: 25
                          credits: 0
                      startedMissions:
                        - id: m-2
                          name: m-2
                          imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                          description: Mission driven by ev-2
                      achievements: []
                      unlockedAchievements: []
                      rules: []
                      completedStreaks:
                        - id: streak-1
                          name: Streak One
                          imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                          description: Streak One Description
                          streakCount: 1
                          points: 10
                          credits: 0
                          startedOn: '2024-04-08T02:34:33.870Z'
                          completedOn: '2024-04-08T02:34:33.870Z'
                          lastStreakOn: '2024-04-08T02:34:33.870Z'
                      activeStreaks:
                        - id: streak-2
                          name: Streak Two
                          imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                          description: Streak Two Description
                          streakCount: 2
                          points: 0
                          credits: 0
                          startedOn: '2024-04-08T02:34:59.361Z'
                          lastStreakOn: '2024-04-09T06:34:59.361Z'
        '400':
          description: Invalid request. Check request data.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
        '404':
          description: 'Needed element not found (player, event).'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Events
  '/events/{id}':
    get:
      description: |
        Retrieves the event with the specified ID within the given account
      operationId: getEvent
      summary: Retrieves the specified event data within the given account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the event
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Event retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Event
                type: object
                required:
                  - id
                  - name
                  - description
                  - tags
                  - category
                  - imgUrl
                  - isAvailable
                  - reward
                properties:
                  id:
                    type: string
                    description: ID of the event
                  name:
                    type: string
                    description: Name of the event
                  description:
                    type: string
                    description: Description of the event
                  tags:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                  category:
                    type: string
                    description: Category to which the element belongs
                  imgUrl:
                    type: string
                    description: URL of the event image
                  isAvailable:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                  reward:
                    type: object
                    required:
                      - points
                      - credits
                      - achievements
                    properties:
                      points:
                        type: integer
                        description: Points awarded upon completion of the element
                      credits:
                        type: integer
                        description: Credits awarded upon completion of the element
                      achievements:
                        type: array
                        description: List of achievements with steps incremented upon completion of the element
                        items:
                          type: object
                          required:
                            - id
                            - steps
                          properties:
                            id:
                              type: string
                              description: ID of the achievement
                            steps:
                              type: integer
                              description: Steps granted towards the given achievement
              examples:
                Get Event:
                  value:
                    description: Use this event each time the player plays a game
                    category: ''
                    tags: []
                    imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                    isAvailable: true
                    id: play-game
                    name: Play Game
                    reward:
                      points: 0
                      credits: 0
                      achievements: []
        '404':
          description: Event not found or no elements matching the language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Events
  /events:
    get:
      description: |
        Retrieves events specified by given query within the given account.
      operationId: getAllEvents
      summary: Retrieves all events within the given account
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
        - name: limit
          in: query
          required: false
          description: |
            Number of results to return in the response. Useful for pagination.
          schema:
            type: integer
            default: 50
        - name: skip
          in: query
          required: false
          description: Number of results to skip from the beginning. Useful for pagination
          schema:
            type: integer
            default: 0
        - name: category
          in: query
          required: false
          description: |
            Specifies the category by which to filter results. You may specifiy a comma-separated 
            list of all allowed categories. Defaults to empty string, all categories will be returned
          schema:
            type: string
            default: ''
        - name: availability
          in: query
          required: false
          description: |
            Specifies the availability by which to filter results. Allowed values are: 
            - `all` - return all results regardless of their availability status
            - `true` - return only available results)
            - `false` - return only unavailable results
          schema:
            type: string
            enum:
              - all
              - 'true'
              - 'false'
            default: true
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - name: language
          in: query
          required: false
          schema:
            type: string
          description: |
            ISO 639-1 language code for the requested language, like 'en'. If none is provided,
            texts for the main gamelayer element will be provided. If the given code is 
            not in the list of currently supported languages or definitions for the specified language query
            do not exist, an HTTP error response is provided. 
            List of supported languages is: 
            -  `en` - English
            -  `ar` - Arabic
            -  `zh` - Chinese
            -  `cs` -Czech
            -  `fi` - Finnish
            -  `fr` - French
            -  `de` - German
            -  `el` - Greek
            -  `hi` - Hindi
            -  `it` - Italian
            -  `ja` - Japanese
            -  `kk` - Kazakh
            -  `pt` - Portuguese
            -  `ru` - Russian
            -  `es` - Spanish
            -  `sv` - Swedish
            -  `tr` - Turkish
      responses:
        '200':
          description: |
            Events retrieved succesfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema'
              examples:
                Get Events:
                  value:
                    - description: Use this event each time the player plays a game
                      category: ''
                      tags: []
                      imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                      isAvailable: true
                      id: play-game
                      name: Play Game
                      reward:
                        points: 0
                        credits: 0
                        achievements: []
                    - description: Use this event each time the player watches a video
                      category: ''
                      tags: []
                      imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                      isAvailable: true
                      id: watch-video
                      name: Video Player
                      reward:
                        points: 0
                        credits: 0
                        achievements: []
        '404':
          description: |
            Some elements are missing translations for the given language filter.
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                  - errorCode
                properties:
                  error:
                    type: string
                    description: Error in cleartext
                  errorCode:
                    type: integer
                    description: |
                      Error codes:<br> 
                      1 - Achievement not found.<br>
                      2 - Event not found.<br>
                      3 - Player not found.<br>
                      4 - Leaderboard not found.<br>
                      5 - Level not not found.<br>
                      6 - Mission not found.<br>
                      7 - Prize not found.<br>
                      8 - Team not found.<br>
                      9 - Team join failed.<br>
                      10 - Mystery box not found.<br>
                      11 - Raffle not found.<br>
                      20 - Player not provided<br>
                      21 - Player exists<br>
                      22 - Maximum allowed of players created for development account<br>
                      25 - Invalid time zone provided for player. Must be in IANA format. 
                      31 - Team exists<br>
                      40 - Survey not found.<br>
                      41 - Answers missing in complete survey request.<br>
                      42 - Player is not eligible for the survey.<br>
                      43 - Player has not completed the survey.<br>
                      44 - Survey results mismatch with provided survey.<br>
                      50 - Quiz not found.<br>
                      51 - Answers missing in complete quiz request.<br>
                      52 - Quiz has not been started.<br>
                      53 - Quiz was not completed in time.<br>
                      54 - Player is not eligible for the quiz.<br>
                      100 - No elements defined for provided language filter.<br>
                      1001 - Database save error<br>
                      1002 - Database update error<br>
                      1002 - Database delete error<br>
      tags:
        - Events
  '/leaderboards/{id}':
    get:
      description: |
        Retrieves player score data for the specified leaderboard. If the leaderboard contains a 
        partition, the partition value to query must be be provided as a parameter, e.g. 
        the specific path, team or category for which to get the player scores.
      operationId: getLeaderboard
      summary: Retrieves player score data for the specified leaderboard within the given account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the leaderboard
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/3'
        - name: team
          in: query
          required: false
          description: |
            Team for which to retrieve leaderboard scores. Required if the leaderboard is 
            partitioned by ```team members vs team members```, ignored otherwise
          schema:
            type: string
            default: ''
        - name: rankBy
          in: query
          required: false
          description: |
            Specifies how team leaderboard data is compared. This is only relevant
            if element is set to ```team```. Allowed values are:
            - `total` - total points for team
            - `average` - average points for team
          schema:
            type: string
            enum:
              - total
              - average
            default: total
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Leaderboard retrieved successfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                description: Response to leaderboard query based on player scores
                type: object
                required:
                  - leaderboard
                  - scores
                properties:
                  leaderboard:
                    type: object
                    required:
                      - id
                      - name
                      - description
                      - imgUrl
                      - period
                    properties:
                      id:
                        $ref: '#/paths/~1leaderboards/get/responses/200/content/application~1json/schema/items/properties/id'
                      name:
                        $ref: '#/paths/~1leaderboards/get/responses/200/content/application~1json/schema/items/properties/name'
                      description:
                        $ref: '#/paths/~1leaderboards/get/responses/200/content/application~1json/schema/items/properties/description'
                      imgUrl:
                        $ref: '#/paths/~1leaderboards/get/responses/200/content/application~1json/schema/items/properties/imgUrl'
                      period:
                        $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/period'
                  scores:
                    type: object
                    required:
                      - data
                    properties:
                      totalPlayers:
                        type: integer
                        description: Total players in the leaderboard (in response if leaderboard is for players or members vs members)
                      totalTeams:
                        type: integer
                        description: Total teams in the leaderboard (in response if leaderboard is for teams)
                      data:
                        type: array
                        items:
                          type: object
                          required:
                            - player
                            - name
                            - rank
                            - scores
                            - tags
                          properties:
                            player:
                              type: string
                              description: ID of the player
                            name:
                              type: string
                              description: Name of the player
                            rank:
                              type: integer
                              description: Player ranking in the leaderboard
                            scores:
                              type: integer
                              description: Player's score in leaderboard
                            tags:
                              $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
              examples:
                Get Leaderboard:
                  value:
                    leaderboard:
                      name: Hall of Fame
                      description: Can you become the Leader of the Pack?!
                      imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                      period: all-time
                      id: hall-of-fame
                    scores:
                      totalPlayers: 2
                      data:
                        - player: player5@test.com
                          name: Joe Doe
                          points: 108000
                          tags: []
                          rank: 1
                        - name: Joe Bloggs
                          points: 26110
                          player: player1@test.com
                          tags: []
                          rank: 2
                Get Leaderboard Members vs Members:
                  value:
                    leaderboard:
                      name: Members in Teams
                      description: Members in teams competing against each other
                      imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                      period: daily
                      element: teammembers
                      id: leaderboard-teammembers
                    scores:
                      totalPlayers: 8
                      data:
                        - player: lb-103
                          name: Lb-103
                          scores: 105
                          tags: []
                          team: team-lb-2
                          rank: 1
                        - player: lb-100
                          name: Lb-100
                          scores: 84
                          tags: []
                          team: team-lb-2
                          rank: 2
                        - player: lb-123
                          name: Lb-123
                          scores: 63
                          tags: []
                          team: team-lb-2
                          rank: 3
                Get Leaderboard for Team:
                  value:
                    leaderboard:
                      name: Best Team Players
                      description: Compete against your immediate team colleagues for the top spot!!!
                      element: team
                      id: leaderboard-team
                    scores:
                      totalTeams: 9
                      data:
                        - team: team-lb-2
                          scores: 357
                          rank: 1
                          name: Test leaderboard team 2
                        - team: team-lb-1
                          scores: 21
                          rank: 2
                          name: Team Leaderboard One
        '404':
          description: Leaderboard not found or no elements matching the language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Leaderboards
  /leaderboards:
    get:
      description: |
        Retrieves all of the leaderboards within the given account
      operationId: getAllLeaderboards
      summary: Retrieves all leaderboards within the given account
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1prizes/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/3'
        - $ref: '#/paths/~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/7'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
      responses:
        '200':
          description: |
            Leaderboards retrieved succesfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Response to Get Leaderboard
                  type: object
                  required:
                    - id
                    - name
                    - description
                    - imgUrl
                    - tags
                    - category
                    - isAvailable
                    - period
                    - element
                    - rankBy
                    - units
                    - active
                    - requirement
                  properties:
                    id:
                      type: string
                      description: ID of the leaderboard
                    name:
                      type: string
                      description: Name of the leaderboard
                    description:
                      type: string
                      description: Description of the leaderboard
                    imgUrl:
                      type: string
                      description: URL of the leaderboard image
                    tags:
                      $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                    category:
                      $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                    isAvailable:
                      $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                    period:
                      $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/period'
                    element:
                      type: string
                      description: |
                        Specifies how leaderboard data is retrieved. Allowed values are: 
                        - `team` - compare teams in leaderboard
                        - `player` - compare players
                        - `teammembers` - compare members in team
                      enum:
                        - team
                        - player
                        - teammembers
                    rankBy:
                      type: string
                      description: Specifies how team leaderboard data is compared
                      enum:
                        - total
                        - average
                    units:
                      type: string
                      description: Unit used in leaderboard rankings (points or credits)
                      enum:
                        - points
                        - credits
                    active:
                      $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/active'
                    requirement:
                      $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/requirement'
              examples:
                Get Leaderboards:
                  value:
                    - name: Hall of Fame
                      description: Can you become the Leader of the Pack?!
                      imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      period: all-time
                      element: player
                      rankBy: total
                      units: points
                      id: hall-of-fame
                      active:
                        from: '2021-12-31T22:00:00.000Z'
                        to: '2022-12-30T22:00:00.000Z'
                      requirement:
                        category: ''
                        tags: []
                        missions: []
                        achievements: []
                        level:
                          id: ''
                          ordinal: 0
        '404':
          description: |
            Some elements are missing translations for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Leaderboards
  '/levels/{id}':
    get:
      description: |
        Retrieves the level with the specified ID within the given account
      operationId: getLevel
      summary: Retrieves the specified level data within the given account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the level
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Level retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to get Level
                type: object
                required:
                  - id
                  - name
                  - description
                  - imgUrl
                  - tags
                  - category
                  - isAvailable
                  - ordinal
                  - reward
                  - objectives
                properties:
                  id:
                    type: string
                    description: ID of the level
                  name:
                    type: string
                    description: Name of the level
                  description:
                    type: string
                    description: Description of the level
                  imgUrl:
                    type: string
                    description: URL of the level image
                  tags:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                  category:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                  isAvailable:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                  ordinal:
                    type: integer
                    description: 'Ordering of the levels, starts at 0'
                  reward:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/reward'
                  objectives:
                    type: object
                    description: Objectives required to reach this level
                    required:
                      - points
                      - credits
                      - achievements
                    properties:
                      points:
                        type: integer
                        description: Points required to reach this level
                      credits:
                        type: integer
                        description: Credits required to reach this level
                      achievements:
                        type: array
                        description: List of granted achievement required to reach this level
                        items:
                          type: string
                          description: Achievement ID
              examples:
                Get Level:
                  value:
                    name: Wookie Rookie
                    description: Level Up! Nice work .. You made the grade and became a Rookie!!
                    imgUrl: 'https://images.gamelayer.co/glimages/gltest/3572830.png'
                    category: ''
                    tags: []
                    isAvailable: true
                    id: level-2
                    ordinal: 1
                    objectives:
                      points: 1000
                      credits: 0
                      achievements: []
                    reward:
                      points: 0
                      credits: 0
                      achievements: []
        '404':
          description: Level not found or no elements matching the language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Levels
  /levels:
    get:
      description: |
        Retrieves all of the levels within the given account
      operationId: getAllLevels
      summary: Retrieves all levels within the given account
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/3'
        - $ref: '#/paths/~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/7'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
      responses:
        '200':
          description: |
            Levels retrieved succesfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema'
              examples:
                Get Levels:
                  value:
                    - name: Total Noob
                      description: You have to start somewhere .. So start at the very beginning!
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/3572829.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      id: level-1
                      ordinal: 0
                      objectives:
                        points: 100
                        credits: 0
                        achievements: []
                      reward:
                        points: 0
                        credits: 0
                        achievements: []
                    - name: Wookie Rookie
                      description: Level Up! Nice work .. You made the grade and became a Rookie!!
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/3572830.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      id: level-2
                      ordinal: 1
                      objectives:
                        points: 1000
                        credits: 0
                        achievements: []
                      reward:
                        points: 0
                        credits: 0
                        achievements: []
                    - name: Grand Master
                      description: Level Up! You rock .. The hard work paid off and you made it to Master!!
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/3572831.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      id: level-3
                      ordinal: 2
                      objectives:
                        points: 5000
                        credits: 0
                        achievements: []
                      reward:
                        points: 0
                        credits: 0
                        achievements: []
        '404':
          description: |
            Some elements are missing translations for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Levels
  '/missions/{id}':
    get:
      description: |
        Retrieves the mission with the specified ID within the given account
      operationId: getMission
      summary: Retrieves the specified mission data within the given account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the mission
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Mission retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Mission
                type: object
                required:
                  - id
                  - name
                  - description
                  - imgUrl
                  - tags
                  - category
                  - isAvailable
                  - priority
                  - period
                  - limitCount
                  - countLimit
                  - active
                  - objectives
                  - requirement
                  - reward
                properties:
                  id:
                    type: string
                    description: ID of the mission
                  name:
                    type: string
                    description: Name of the mission
                  description:
                    type: string
                    description: Description of the mission
                  imgUrl:
                    type: string
                    description: URL of the mission image
                  tags:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                  category:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                  isAvailable:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                  priority:
                    type: integer
                    description: Priority of the mission
                  period:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/period'
                  limitCount:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/limitCount'
                  countLimit:
                    $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/countLimit'
                  active:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/active'
                  objectives:
                    type: object
                    description: Objectives for the element
                    required:
                      - events
                    properties:
                      events:
                        type: array
                        description: List of event objectives required for completion of the element
                        items:
                          type: object
                          required:
                            - id
                            - count
                          properties:
                            id:
                              type: string
                              description: ID of the event
                            count:
                              type: integer
                              description: Count needed for objective completion
                  requirement:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/requirement'
                  reward:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/reward'
              examples:
                Get Mission:
                  value:
                    timeToComplete: 0
                    timeToRestart: 0
                    description: Complete the game before the end of the month
                    priority: 2
                    category: ''
                    isAvailable: true
                    limitCount: false
                    countLimit: 1
                    tags: []
                    imgUrl: 'https://images.gamelayer.co/glimages/gltest/game2.png'
                    id: play-me
                    name: Gaming is Life
                    active:
                      from: '2021-12-31T22:00:00.000Z'
                      to: '2022-12-30T22:00:00.000Z'
                    period: monthly
                    objectives:
                      events:
                        - currentCount: 0
                          id: play-game
                          count: 1
                      missions: []
                    requirement:
                      category: ''
                      tags:
                        - gamer
                      missions: []
                      achievements: []
                      level:
                        id: level-2
                        ordinal: 1
                    reward:
                      points: 250
                      credits: 100
                      achievements:
                        - id: game-addict
                          steps: 1
        '404':
          description: Mission not found or no elements matching the language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Missions
  /missions:
    get:
      description: |
        Retrieves all the missions within the given account. By default, the request returns 
        all active missions at the time of the request. If the showAll parameter is set to true 
        all missions defined in the account, regardless of their active period, will be returned 
        instead. More advanced queries can be specified with the timeframe query. 

        Results are sorted by active start date.
      operationId: getAllMissions
      summary: Retrieves all missions within the given account
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/3'
        - $ref: '#/paths/~1prizes/get/parameters/3'
        - $ref: '#/paths/~1prizes/get/parameters/1'
        - $ref: '#/paths/~1prizes/get/parameters/7'
        - $ref: '#/paths/~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Missions retrieved successfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema'
              examples:
                Get Missions:
                  value:
                    - timeToComplete: 0
                      timeToRestart: 0
                      description: Complete five coding exercises this week
                      priority: 1
                      category: Programming
                      isAvailable: true
                      limitCount: false
                      countLimit: 1
                      tags: []
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/code1.png'
                      id: code-me
                      name: Stay Calm and Code
                      active:
                        from: '2021-12-31T22:00:00.000Z'
                        to: '2022-12-30T22:00:00.000Z'
                      period: weekly
                      objectives:
                        events:
                          - currentCount: 0
                            id: write-code
                            count: 5
                        missions: []
                      requirement:
                        category: ''
                        tags:
                          - coder
                        missions: []
                        achievements: []
                        level:
                          id: level-2
                          ordinal: 1
                      reward:
                        points: 100
                        credits: 10
                        achievements:
                          - id: king-of-code
                            steps: 1
                    - timeToComplete: 0
                      timeToRestart: 0
                      description: Complete the game before the end of the month
                      priority: 2
                      category: ''
                      isAvailable: true
                      limitCount: false
                      countLimit: 1
                      tags: []
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/game2.png'
                      id: play-me
                      name: Gaming is Life
                      active:
                        from: '2021-12-31T22:00:00.000Z'
                        to: '2022-12-30T22:00:00.000Z'
                      period: monthly
                      objectives:
                        events:
                          - currentCount: 0
                            id: play-game
                            count: 1
                        missions: []
                      requirement:
                        category: ''
                        tags:
                          - gamer
                        missions: []
                        achievements: []
                        level:
                          id: level-2
                          ordinal: 1
                      reward:
                        points: 250
                        credits: 100
                        achievements:
                          - id: game-addict
                            steps: 1
        '404':
          description: |
            Some elements are missing translations for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Missions
  '/mysteryboxes/{id}':
    get:
      description: |
        Retrieves the mystery box with the specified ID within the given account
      operationId: getMysteryBox
      summary: Retrieves the specified mystery box data within the given account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the mystery box
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1prizes/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Mystery box retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Mystery Box
                type: object
                required:
                  - id
                  - name
                  - description
                  - imgUrl
                  - tags
                  - category
                  - isAvailable
                  - credits
                  - stock
                  - limitCount
                  - countLimit
                  - active
                  - period
                  - requirement
                properties:
                  id:
                    type: string
                    description: ID of the mystery box
                  name:
                    type: string
                    description: Name of the mystery box
                  description:
                    type: string
                    description: Description of the mystery box
                  imgUrl:
                    type: string
                    description: URL of the mystery box image
                  tags:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                  category:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                  isAvailable:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                  credits:
                    type: integer
                    description: The amount of credits required to redeem the mystery box
                  stock:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/stock'
                  limitCount:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/limitCount'
                  countLimit:
                    $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/countLimit'
                  active:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/active'
                  period:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/period'
                  requirement:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/requirement'
              examples:
                Get Mystery Box:
                  value:
                    stock:
                      redeemed: 0
                      available: 60
                      count: 60
                    name: Daily Mystery Box
                    description: Come back every day and open the Mystery Box for great prizes!
                    imgUrl: 'https://images.gamelayer.co/glimages/gltest/prize.png'
                    category: ''
                    tags: []
                    isAvailable: true
                    credits: 1
                    countLimit: 5
                    id: daily-reward
                    active:
                      from: '2021-12-31T22:00:00.000Z'
                      to: '2022-12-30T22:00:00.000Z'
                    period: daily
                    requirement:
                      category: ''
                      tags: []
                      missions: []
                      achievements: []
                      level:
                        id: ''
                        ordinal: 0
        '404':
          description: |
            Mystery box not found, player not found or no elements 
            matching the language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - MysteryBoxes
  '/mysteryboxes/{id}/claim':
    post:
      description: |
        Claims a mystery box within the given account for the given player.
        If a language property is provided in the body, the response will contain 
        translated elements. In case no translations are found for the language, 
        default texts will be used in the response.
      operationId: claimMysteryBox
      summary: Claims a mystery box within the given account
      parameters:
        - $ref: '#/paths/~1mysteryboxes~1%7Bid%7D/get/parameters/0'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Mystery box redeem request
              required:
                - player
                - account
              properties:
                player:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/player'
                account:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/account'
                language:
                  $ref: '#/paths/~1prizes~1%7Bid%7D~1claim/post/requestBody/content/application~1json/schema/properties/language'
            examples:
              Claim Mystery Box:
                value:
                  account: gamelayer-test
                  player: player-1
      responses:
        '200':
          description: Mystery box redeemed succesfully
          content:
            application/json:
              schema:
                description: Response to Redeem Mystery Box
                type: object
                required:
                  - code
                  - message
                  - player
                  - mysterybox
                  - prize
                properties:
                  code:
                    type: integer
                    description: |
                      Status code indicating the success of the operation. Possible values:
                      - 1 - Mystery box redeemed
                      - 2 - Player does not have enough credits to redeem mystery box
                      - 3 - Mystery box is out of stock
                      - 4 - Mystery box prizes out of stock
                      - 5 - Player has exceeded available requests to redeem the mystery box
                      - 6 - Player does not meet mystery box requirements
                  message:
                    type: string
                    description: Clear text status description
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  mysterybox:
                    type: object
                    required:
                      - id
                      - name
                      - description
                      - imgUrl
                      - stock
                      - credits
                    properties:
                      id:
                        $ref: '#/paths/~1mysteryboxes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                      name:
                        $ref: '#/paths/~1mysteryboxes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                      description:
                        $ref: '#/paths/~1mysteryboxes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                      imgUrl:
                        $ref: '#/paths/~1mysteryboxes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                      stock:
                        $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/stock'
                      credits:
                        type: integer
                        description: Credits required to redeem the mystery box
              examples:
                Claim Mystery Box Response:
                  value:
                    code: 1
                    message: Prize cup-coffee claimed from mysterybox
                    mysterybox:
                      id: daily-reward
                      name: Daily Mystery Box
                      description: Come back every day and open the Mystery Box for great prizes!
                      stock:
                        redeemed: 6
                        available: 100029
                        count: 100030
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/prize.png'
                      category: ''
                      isAvailable: true
                      credits: 1
                    prize:
                      stock:
                        redeemed: 8
                        available: 86
                        count: 100
                      name: Coffee
                      description: 'Treat yourself to a hot cup of (house) coffee :)'
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/coffee.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      credits: 10
                      limitCount: false
                      countLimit: 1
                      limitStock: true
                      stockCount: 100
                      id: cup-coffee
                      active:
                        from: '2021-12-31T22:00:00.000Z'
                        to: '2022-12-30T22:00:00.000Z'
                      period: monthly
                      requirement:
                        category: ''
                        tags: []
                        missions: []
                        achievements: []
                        level:
                          id: level-1
                          ordinal: 0
                      account: docs-for-devs
                    player:
                      name: Susan Smith
                      points: 962
                      credits: 100155
        '404':
          description: Mysterybox or player not found
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - MysteryBoxes
  /mysteryboxes:
    get:
      description: |
        Retrieves all the mystery boxes within the given account. If a player name is specified in the 
        parameters, only those mystery boxes the player can currently afford will be returned.
        By default, the response will contain all available mystery boxes at the time of the request. 
        That includes mystery boxes that have been explicitly set as available and have stock available, 
        if applicable
      operationId: getAllMysteryBoxes
      summary: Retrieves all mystery boxes within the given account
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/3'
        - $ref: '#/paths/~1prizes/get/parameters/3'
        - $ref: '#/paths/~1prizes/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1prizes/get/parameters/7'
        - $ref: '#/paths/~1prizes/get/parameters/8'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: Mystery boxes retrieved successfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1mysteryboxes~1%7Bid%7D/get/responses/200/content/application~1json/schema'
              examples:
                Get Mystery Boxes:
                  value:
                    - stock:
                        redeemed: 0
                        available: 60
                        count: 60
                      name: Daily Mystery Box
                      description: Come back every day and open the Mystery Box for great prizes!
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/prize.png'
                      priority: 0
                      category: ''
                      tags: []
                      isAvailable: true
                      credits: 1
                      countLimit: 5
                      id: daily-reward
                      active:
                        from: '2021-12-31T22:00:00.000Z'
                        to: '2022-12-30T22:00:00.000Z'
                      period: daily
                      requirement:
                        category: ''
                        tags: []
                        missions: []
                        achievements: []
                        level:
                          id: ''
                          ordinal: 0
        '404':
          description: |
            Some elements are missing translations for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - MysteryBoxes
  '/players/{player}':
    get:
      description: |
        Retrieves the basic data of the player with the specified ID within the given account
      operationId: getPlayer
      summary: Retrieves the specified player data within the given account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the player
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
      responses:
        '200':
          description: |
            Player retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Player
                type: object
                required:
                  - player
                  - name
                  - imgUrl
                  - tags
                  - category
                  - isAvailable
                  - points
                  - credits
                  - team
                  - level
                  - createdOn
                  - refreshOffset
                properties:
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/player'
                  name:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/name'
                  imgUrl:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/imgUrl'
                  tags:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                  category:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                  isAvailable:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                  points:
                    type: integer
                    description: Player's point balance
                  credits:
                    type: integer
                    description: Player's credit balance
                  team:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/team'
                  level:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/level'
                  createdOn:
                    type: string
                    description: Time when player was created
                  refreshOffset:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/refreshOffset'
              examples:
                Get Player:
                  value:
                    tags:
                      - coder
                    category: ''
                    imgUrl: 'https://images.gamelayer.co/glimages/gltest/girl1.png'
                    isAvailable: true
                    points: 0
                    credits: 998
                    team: a-team
                    level:
                      id: ''
                      name: ''
                      description: ''
                      imgUrl: ''
                      ordinal: 0
                    player: player-080277
                    name: Jane Doe
                    createdOn: '2022-03-03T05:58:16.622Z'
        '404':
          description: Player not found
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Players
    patch:
      description: |
        Updates a player within the given account (partial update). Partial data update allows you to specify
        only certain field to be updated, i.e. if a field is not present in the request, it will not be modified
        on the updated document
      operationId: updatePlayer
      summary: Updates a player within the given account
      parameters:
        - $ref: '#/paths/~1players~1%7Bplayer%7D/get/parameters/0'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - player
                - account
              properties:
                account:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/account'
                player:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/player'
                name:
                  $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/name'
                tags:
                  $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/tags'
                category:
                  $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/category'
                imgUrl:
                  $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/imgUrl'
                mode:
                  $ref: '#/paths/~1teams~1%7Bid%7D/patch/requestBody/content/application~1json/schema/properties/mode'
                points:
                  $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/points'
                credits:
                  $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/credits'
                refreshOffset:
                  $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/refreshOffset'
            examples:
              Update Player:
                value:
                  tags:
                    - running
                    - health
                  category: ''
                  imgUrl: ''
                  isAvailable: true
                  points: 300
                  credits: 30
                  team: ''
                  level:
                    id: ''
                    name: ''
                    description: ''
                    imgUrl: ''
                    ordinal: 0
                  player: player-42
                  name: Mr Anderson
                  createdOn: '2022-03-05T06:14:51.033Z'
      responses:
        '200':
          description: Player updated successfully
          content:
            application/json:
              schema:
                $ref: '#/paths/~1players~1%7Bplayer%7D/get/responses/200/content/application~1json/schema'
              examples:
                Get Player:
                  $ref: '#/paths/~1players~1%7Bplayer%7D/get/responses/200/content/application~1json/examples/Get%20Player'
        '400':
          description: Bad request. Check request data.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
        '404':
          description: Player or team not found
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Players
    delete:
      description: |
        Deletes the specified player from the given account
      operationId: deletePlayer
      summary: Deletes a player within the given account
      parameters:
        - $ref: '#/paths/~1players~1%7Bplayer%7D/get/parameters/0'
        - $ref: '#/paths/~1rules/get/parameters/0'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                hardDelete:
                  type: boolean
                  description: 'If set, all player records will also be deleted. Default is false.'
      responses:
        '204':
          description: Player deleted successfully
      tags:
        - Players
  '/players/{player}/achievements':
    get:
      description: |
        Retrieves the unlocked and/or granted achievements for player with the 
        specified ID within the given account
      operationId: getPlayerAchievements
      summary: Retrieves the player's achievements within the given account
      parameters:
        - $ref: '#/paths/~1players~1%7Bplayer%7D/get/parameters/0'
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1players~1%7Bplayer%7D~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Player achievements retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Player Achievements
                type: object
                required:
                  - player
                  - achievements
                properties:
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  achievements:
                    type: object
                    required:
                      - completed
                      - started
                    properties:
                      completed:
                        type: array
                        description: List of completed achievements
                        items:
                          $ref: '#/paths/~1achievements~1%7Bid%7D/get/responses/200/content/application~1json/schema'
                      started:
                        type: array
                        description: List of started achievements
                        items:
                          $ref: '#/paths/~1achievements~1%7Bid%7D/get/responses/200/content/application~1json/schema'
              examples:
                Get Player Achievements:
                  value:
                    player:
                      points: 0
                      credits: 5
                      name: Susan Smith
                    achievements:
                      started:
                        - description: Game On! You unlocked the Game Addict badge!!
                          category: ''
                          tags:
                            - gamer
                          isAvailable: true
                          steps: 10
                          status: started
                          count: 2
                          actions:
                            startedOn: '2022-03-05T08:51:24.000Z'
                          id: game-addict
                          name: Game Addict
                          imgUrl: 'https://images.gamelayer.co/glimages/gltest/badge1.png'
                          requirement:
                            category: ''
                            tags: []
                            missions: []
                            achievements: []
                            level:
                              id: ''
                              ordinal: 0
                          reward:
                            points: 10
                            credits: 10
                            achievements: []
                      completed: []
        '404':
          description: |
            Player not found or some elements are missing translations 
            for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Players
  '/players/{player}/events':
    get:
      description: |
        Retrieves the completed event actions for player with the specified ID within the given account
      operationId: getPlayerEvents
      summary: Retrieves the player's events within the given account
      parameters:
        - $ref: '#/paths/~1players~1%7Bplayer%7D/get/parameters/0'
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - name: completion
          in: query
          required: false
          description: |
            Specifies the completion status by which to filter results. Allowed values are: 
            - `started` - e.g. started missions waiting for completion, unlocked achievements,
            - `completed` - e.g. completed missions, granted achievements, redeemed prizes
            - `all` - all results, regardless of completion status
          schema:
            type: string
            enum:
              - started
              - completed
              - all
            default: all
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Player events retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Player Events
                type: object
                required:
                  - player
                  - events
                properties:
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  events:
                    type: array
                    description: List of completed events
                    items:
                      type: object
                      description: Data of completed events
                      required:
                        - id
                        - name
                        - description
                        - isAvailable
                        - reward
                        - actions
                      properties:
                        id:
                          type: string
                          description: ID of the completed event
                        name:
                          $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                        description:
                          $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                        isAvailable:
                          $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                        reward:
                          $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/reward'
                        actions:
                          type: object
                          required:
                            - completedOn
                            - firstCompletedOn
                            - count
                          properties:
                            completedOn:
                              type: string
                              description: Last time when event was completed
                            firstCompletedOn:
                              type: string
                              description: Time when event was completed first time
                            count:
                              type: integer
                              description: Number of times the event has been completed
              examples:
                Get Player Events:
                  value:
                    player:
                      points: 0
                      credits: 5
                      name: Susan Smith
                    events:
                      - description: Use this event each time the player plays a game
                        name: Play Game
                        isAvailable: true
                        id: play-game
                        reward:
                          points: 0
                          credits: 0
                          achievements: []
                        actions:
                          count: 5
                          firstCompletedOn: '2022-03-05T08:49:07.319Z'
                          completedOn: '2022-03-05T08:51:33.366Z'
        '404':
          description: |
            Player not found or some elements are missing translations for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Players
  '/players/{player}/levels':
    get:
      description: |
        Retrieves the completed level actions for player with the specified ID within the given account
      operationId: getPlayerLevels
      summary: Retrieves the player's levels within the given account
      parameters:
        - $ref: '#/paths/~1players~1%7Bplayer%7D/get/parameters/0'
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1players~1%7Bplayer%7D~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Player levels retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Player Levels
                type: object
                required:
                  - player
                  - levels
                properties:
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  levels:
                    type: object
                    required:
                      - completed
                      - started
                    properties:
                      completed:
                        type: array
                        description: List of completed levels
                        items:
                          type: object
                          required:
                            - id
                            - name
                            - description
                            - imgUrl
                            - ordinal
                            - reward
                            - actions
                          properties:
                            id:
                              type: string
                              description: ID of the completed level
                            name:
                              $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                            description:
                              $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                            imgUrl:
                              $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                            ordinal:
                              $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/ordinal'
                            reward:
                              $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/reward'
                            actions:
                              type: object
                              required:
                                - startedOn
                              properties:
                                startedOn:
                                  type: string
                                  description: Time when the element was started
                                completedOn:
                                  type: string
                                  description: Time when the element was completed
                      started:
                        type: object
                        description: Details about started level
                        required:
                          - id
                          - name
                          - description
                          - imgUrl
                          - ordinal
                          - reward
                          - actions
                        properties:
                          id:
                            type: string
                            description: ID of the started level
                          name:
                            $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                          description:
                            $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                          imgUrl:
                            $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                          ordinal:
                            $ref: '#/paths/~1levels~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/ordinal'
                          reward:
                            $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/reward'
                          actions:
                            type: object
                            required:
                              - startedOn
                            properties:
                              startedOn:
                                type: string
                                description: Time when the level was started
              examples:
                Get Player Levels:
                  value:
                    player:
                      name: Susan Smith
                      points: 0
                      credits: 5
                    levels:
                      started:
                        id: level-3
                        description: Level Up! You rock .. The hard work paid off and you made it to Master!!
                        name: Grand Master
                        imgUrl: 'https://images.gamelayer.co/glimages/gltest/3572831.png'
                        ordinal: 2
                        started: true
                        completed: false
                        reward:
                          points: 0
                          credits: 0
                          achievements: []
                        actions:
                          startedOn: '2022-03-05T08:49:07.000Z'
                      completed: []
        '404':
          description: |
            Player not found or some elements are missing translations for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Players
  '/players/{player}/missions':
    get:
      description: |
        Retrieves the started and/or completed missions for player with the specified 
        ID within the given account
      operationId: getPlayerMissions
      summary: Retrieves the player's missions within the given account
      parameters:
        - $ref: '#/paths/~1players~1%7Bplayer%7D/get/parameters/0'
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1players~1%7Bplayer%7D~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Player missions retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Player Missions
                type: object
                required:
                  - player
                  - missions
                properties:
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  missions:
                    type: object
                    required:
                      - started
                      - completed
                    properties:
                      started:
                        type: array
                        description: List of started missions
                        items:
                          description: Player missions response part
                          type: object
                          required:
                            - id
                            - name
                            - description
                            - period
                            - priority
                            - isAvailable
                            - category
                            - tags
                            - imgUrl
                            - countLimit
                            - objectives
                            - reward
                            - actions
                            - status
                          properties:
                            id:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                            name:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                            description:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                            priority:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/priority'
                            isAvailable:
                              $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                            category:
                              $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                            tags:
                              $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                            imgUrl:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                            actions:
                              $ref: '#/paths/~1players~1%7Bplayer%7D~1levels/get/responses/200/content/application~1json/schema/properties/levels/properties/completed/items/properties/actions'
                            period:
                              $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/period'
                            countLimit:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/countLimit'
                            objectives:
                              $ref: '#/paths/~1missions~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/objectives'
                            reward:
                              $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/reward'
                            status:
                              type: string
                              description: Mission status
                              enum:
                                - completed
                                - started
                      completed:
                        type: array
                        description: List of completed missions
                        items:
                          $ref: '#/paths/~1players~1%7Bplayer%7D~1missions/get/responses/200/content/application~1json/schema/properties/missions/properties/started/items'
              examples:
                Get Player Missions:
                  value:
                    player:
                      points: 460
                      credits: 107
                      name: Susan Smith
                    missions:
                      started: []
                      completed:
                        - description: Complete the game before the end of the month
                          priority: 2
                          category: ''
                          isAvailable: true
                          countLimit: 1
                          tags:
                            - games
                          imgUrl: 'https://images.gamelayer.co/glimages/gltest/game2.png'
                          actions:
                            startedOn: '2022-03-11T03:43:52.000Z'
                            completedOn: '2022-03-11T03:43:52.000Z'
                          id: play-me
                          name: Gaming is Life
                          period: monthly
                          objectives:
                            events:
                              - currentCount: 1
                                id: play-game
                                count: 1
                            missions: []
                          reward:
                            points: 250
                            credits: 100
                            achievements:
                              - id: game-addict
                                steps: 1
                          status: completed
        '404':
          description: |
            Player not found or some elements are missing translations 
            for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Players
  '/players/{player}/missions/{id}':
    get:
      description: |
        Retrieves the mission progress for a given player and mission with the specified 
        ID within the given account.
      operationId: getPlayerMissionProgress
      summary: Retrieves the player's mission progress
      parameters:
        - $ref: '#/paths/~1players~1%7Bplayer%7D/get/parameters/0'
        - name: id
          in: path
          required: true
          description: ID of the mission for which progress will be retrieved
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
      responses:
        '200':
          description: |
            Progress retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Player Mission Progress
                type: object
                required:
                  - player
                  - progess
                properties:
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  progress:
                    type: object
                    required:
                      - totalAverage
                      - nextRefresh
                      - period
                      - state
                      - actions
                      - events
                    properties:
                      totalAverage:
                        type: number
                        description: Total avarage of event completions driving the mission. 1 = all events completed.
                      nextRefresh:
                        type: string
                        description: |
                          UTC time in ISO 8601 format when next refresh will happen for the mission. In case the state is
                          'available', this is the time how long the mission is active to.
                      period:
                        $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/period'
                      state:
                        type: string
                        description: 'State of the mission. It can be started, completed or available, ie that the mission can be started.'
                        enum:
                          - started
                          - completed
                          - available
                      actions:
                        type: object
                        properties:
                          startedOn:
                            type: string
                            description: Time when the mission was started
                          completedOn:
                            type: string
                            description: Time when the mission was completed
                      events:
                        type: array
                        description: List of events driving the mission
                        items:
                          type: object
                          required:
                            - id
                            - count
                            - currentCount
                            - average
                          properties:
                            id:
                              type: string
                              description: ID of the completed event
                            count:
                              type: number
                              description: Number of events needed to complete the mission
                            currentCount:
                              type: number
                              description: Number of events completed
                            average:
                              type: number
                              description: Completion rate of the event
                            name:
                              $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                            description:
                              $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                            imgUrl:
                              type: string
                              description: URL of the event image
              examples:
                Get Player Mission Progress - Started Mission:
                  value:
                    player:
                      points: 2867
                      credits: 0
                      name: Str-2 Player
                    progress:
                      totalAverage: 0.5
                      nextRefresh: '2024-04-22T21:00:00.000Z'
                      period: daily
                      state: started
                      actions:
                        startedOn: '2024-04-22T02:39:29.000Z'
                      events:
                        - id: ev-2
                          count: 10
                          currentCount: 5
                          average: 0.5
                          name: ev-2
                          description: ''
                          imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                Get Player Mission Progress - Completed Mission:
                  value:
                    player:
                      points: 2897
                      credits: 0
                      name: Str-2 Player
                    progress:
                      totalAverage: 1
                      nextRefresh: '2024-04-22T21:00:00.000Z'
                      period: daily
                      state: completed
                      actions:
                        startedOn: '2024-04-22T02:39:29.000Z'
                        completedOn: '2024-04-22T02:50:59.332Z'
                      events:
                        - id: ev-2
                          count: 10
                          currentCount: 10
                          average: 1
                          name: ev-2
                          description: ''
                          imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
        '404':
          description: |
            Player or mission not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Players
  '/players/{player}/prizes':
    get:
      description: |
        Retrieves the redeemed prizes for player with the specified ID within the given account
      operationId: getPlayerPrizes
      summary: Retrieves the player's prizes within the given account
      parameters:
        - $ref: '#/paths/~1players~1%7Bplayer%7D/get/parameters/0'
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1players~1%7Bplayer%7D~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Player prizes retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Player Prizes
                type: object
                required:
                  - player
                  - prizes
                properties:
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  prizes:
                    type: array
                    description: List of prizes
                    items:
                      description: Player prize
                      type: object
                      required:
                        - id
                        - name
                        - description
                        - credits
                        - imgUrl
                        - countLimit
                        - actions
                      properties:
                        id:
                          $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                        name:
                          $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                        description:
                          $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                        credits:
                          $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/credits'
                        imgUrl:
                          $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                        countLimit:
                          $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/countLimit'
                        actions:
                          type: object
                          required:
                            - count
                            - firstCompletedOn
                            - completedOn
                          properties:
                            count:
                              type: integer
                              description: Amount of times prizes has been redeemed by the player.
                            firstCompletedOn:
                              type: string
                              description: Date when prize was first redeemed.
                            completedOn:
                              type: string
                              description: Date for last prize rededem.
              examples:
                Get Player Prize:
                  value:
                    player:
                      name: Susan Smith
                      points: 460
                      credits: 107
                    prizes:
                      - description: 'Treat yourself to a hot cup of (house) coffee :)'
                        name: Coffee
                        imgUrl: 'https://images.gamelayer.co/glimages/gltest/coffee.png'
                        credits: 10
                        countLimit: 1
                        id: cup-coffee
                        actions:
                          count: 1
                          firstCompletedOn: '2022-03-08T03:43:24.206Z'
                          completedOn: '2022-03-08T03:43:24.206Z'
        '404':
          description: |
            Player not found or some elements are missing translations 
            for the given language filter
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Players
  '/players/{player}/ranking':
    get:
      description: |
        Retrieves the given leaderboard ranking data for player with the specified ID within the given account
      operationId: getPlayerRanking
      summary: Retrieves the player's ranking within the given account
      parameters:
        - $ref: '#/paths/~1players~1%7Bplayer%7D/get/parameters/0'
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Player ranking retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Player Rankings
                type: object
                required:
                  - player
                  - ranking
                properties:
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  ranking:
                    type: array
                    description: List of player rankings
                    items:
                      type: object
                      required:
                        - rank
                        - scores
                        - count
                        - totalPlayers
                        - leaderboard
                      properties:
                        rank:
                          type: integer
                          description: Player's rank in the leaderboard
                        scores:
                          type: integer
                          description: Player's score in the leaderboard
                        count:
                          type: integer
                          description: Amount of players who scored for the leaderboard
                        totalPlayers:
                          type: integer
                          description: Total players in the leaderboard
                        leaderboard:
                          type: object
                          required:
                            - id
                            - name
                            - description
                            - period
                            - imgUrl
                          properties:
                            id:
                              $ref: '#/paths/~1leaderboards/get/responses/200/content/application~1json/schema/items/properties/id'
                            name:
                              $ref: '#/paths/~1leaderboards/get/responses/200/content/application~1json/schema/items/properties/name'
                            description:
                              $ref: '#/paths/~1leaderboards/get/responses/200/content/application~1json/schema/items/properties/description'
                            period:
                              $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/period'
                            imgUrl:
                              $ref: '#/paths/~1leaderboards/get/responses/200/content/application~1json/schema/items/properties/imgUrl'
              examples:
                Get Player Ranking:
                  value:
                    player:
                      points: 460
                      credits: 107
                      name: Susan Smith
                    ranking:
                      - leaderboard:
                          id: hall-of-fame
                          name: Hall of Fame
                          period: all-time
                          element: player
                          rankBy: total
                        rank: 4
                        score: 250
                        totalPlayers: 50
        '404':
          description: |
            Player not found or some elements are missing translations 
            for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Players
  '/players/{player}/streaks':
    get:
      description: |
        Retrieves active and/or completed streaks for player with the specified 
        ID within the given account
      operationId: getPlayerStreaks
      summary: Retrieves the player's streaks within the given account
      parameters:
        - $ref: '#/paths/~1players~1%7Bplayer%7D/get/parameters/0'
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1players~1%7Bplayer%7D~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Player streaks retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Player Streaks
                type: object
                required:
                  - player
                  - streaks
                properties:
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  streaks:
                    type: object
                    required:
                      - started
                      - completed
                    properties:
                      started:
                        type: array
                        description: List of active (started) streaks
                        items:
                          description: Player streaks response part
                          type: object
                          required:
                            - account
                            - id
                            - name
                            - description
                            - period
                            - priority
                            - category
                            - tags
                            - imgUrl
                            - limitCount
                            - countLimit
                            - objectives
                            - reward
                            - actions
                          properties:
                            id:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                            name:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                            description:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                            priority:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/priority'
                            isAvailable:
                              $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                            category:
                              $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                            tags:
                              $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                            imgUrl:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                            actions:
                              type: object
                              required:
                                - startedOn
                                - count
                              properties:
                                startedOn:
                                  type: string
                                  description: Time when the streak was started
                                count:
                                  type: number
                                  description: Number of times the streak has been hit
                                completedOn:
                                  type: string
                                  description: Time when the streak was completed
                                firstCompletedOn:
                                  type: string
                                  description: Time when the streak was completed first time
                                lastStreakOn:
                                  type: string
                                  description: Time when active streak was hit last time
                            period:
                              $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/period'
                            countLimit:
                              $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/countLimit'
                            limitCount:
                              $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/limitCount'
                            objectives:
                              type: array
                              description: |
                                An array of mission IDs driving the streak. NOTE! Currently limited to only one mission ID
                              items:
                                type: string
                                description: Mission ID
                            reward:
                              $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/reward'
                      completed:
                        type: array
                        description: List of completed streaks
                        items:
                          $ref: '#/paths/~1players~1%7Bplayer%7D~1streaks/get/responses/200/content/application~1json/schema/properties/streaks/properties/started/items'
              examples:
                Get Player Streaks:
                  value:
                    player:
                      points: 2054
                      credits: 0
                      name: Str-2 Player
                    streaks:
                      started:
                        - limitCount: false
                          countLimit: 1
                          objectives:
                            - m-2
                          id: streak-4
                          account: gltest
                          period: weekly
                          reward:
                            points: 0
                            credits: 0
                            achievements: []
                          actions:
                            startedOn: '2024-04-12T02:59:14.410Z'
                            lastStreakOn: '2024-04-12T02:59:14.410Z'
                            count: 1
                          name: Streak Four
                          description: Unlimited streak for testing
                          imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                          priority: 0
                          category: ''
                          tags: []
                        - limitCount: true
                          countLimit: 5
                          objectives:
                            - m-2
                          id: streak-2
                          account: gltest
                          period: daily
                          reward:
                            points: 1
                            credits: 0
                            achievements: []
                          actions:
                            startedOn: '2024-04-11T02:59:14.318Z'
                            lastStreakOn: '2024-04-12T03:01:52.174Z'
                            count: 2
                          name: Streak Two
                          description: Streak Two Description
                          imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                          priority: 0
                          category: ''
                          tags: []
                      completed:
                        - account: gltest
                          id: streak-1
                          actions:
                            completedOn: '2024-04-12T02:56:17.679Z'
                            count: 1
                            firstCompletedOn: '2024-04-12T02:56:17.679Z'
                            startedOn: '2024-04-12T02:56:17.456Z'
                          objectives:
                            - m-1
                          reward:
                            points: 10
                            credits: 0
                            achievements: []
                          name: Streak One
                          description: Streak One Description
                          imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                          priority: 0
                          category: ''
                          tags: []
                          period: daily
        '404':
          description: |
            Player not found or some elements are missing translations 
            for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Players
  /players:
    get:
      description: |
        Retrieves all players within the given account.
      operationId: getAllPlayers
      summary: Retrieves all players within the given account
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/3'
        - $ref: '#/paths/~1prizes/get/parameters/3'
        - $ref: '#/paths/~1teams~1/get/parameters/5'
        - name: team
          in: query
          required: false
          description: |
            Specifies the teams by which to filter results. You may specify a comma-separated 
            list of all teams to include and/or exclude (preceding their ID mith a minus sign)
          schema:
            type: string
            default: ''
        - name: refreshOffset
          in: query
          required: false
          description: |
            Specifies the refresh offset when a refresh will be done. Offset is provided in format
            UTC+02:00. Valid range is UTC-12:00 to UTC+14:00.
            The URI must be encoded if refreshOffset is provided.
          schema:
            type: string
            default: ''
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
      responses:
        '200':
          description: Players retrieved successfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1players~1%7Bplayer%7D/get/responses/200/content/application~1json/schema'
              examples:
                Get Missions:
                  value:
                    - tags:
                        - coder
                      category: ''
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/girl1.png'
                      isAvailable: true
                      points: 0
                      credits: 998
                      team: a-team
                      level:
                        id: ''
                        name: ''
                        description: ''
                        imgUrl: ''
                        ordinal: 0
                      player: player-080277
                      name: Jane Doe
                      createdOn: '2022-03-03T05:58:16.622Z'
                    - tags:
                        - gamer
                      category: ''
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/girl2.png'
                      isAvailable: true
                      points: 0
                      credits: 5
                      team: a-team
                      level:
                        id: ''
                        name: ''
                        description: ''
                        imgUrl: ''
                        ordinal: 0
                      player: player-200701
                      name: Susan Smith
                      createdOn: '2022-03-03T05:59:24.752Z'
      tags:
        - Players
    post:
      description: |
        Creates a player within the given account
      operationId: createPlayer
      summary: Creates a player within the given account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - player
                - account
                - name
              properties:
                player:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/player'
                account:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/account'
                name:
                  type: string
                  description: Name of the player
                imgUrl:
                  type: string
                  description: URL of the player image
                category:
                  type: string
                  description: 'Category for the player. By default, no category is assigned to the player'
                tags:
                  type: array
                  description: Tags to assign to the player as a comma-separated list
                team:
                  type: string
                  description: 'Team for the player (team ID). By default, no team is assigned to the player'
                level:
                  type: string
                  description: 'Level for the player (level ID). By default, player is assigned to base level.'
                points:
                  type: integer
                  description: Amount of points granted to the player
                credits:
                  type: integer
                  description: Amount of credits granted to the player
                refreshOffset:
                  type: string
                  description: |
                    Specifies the refresh offset when a refresh will be done. Offset is provided in format
                    UTC+02:00. Valid range is UTC-12:00 to UTC+14:00.
            example:
              account: gamelayer-test
              player: player-1
      responses:
        '201':
          description: Player created successfully created
          content:
            application/json:
              schema:
                type: object
                description: Response to Create Player request
                required:
                  - player
                  - name
                  - tags
                  - category
                  - imgUrl
                  - isAvailable
                  - points
                  - credits
                  - team
                  - level
                  - createdOn
                properties:
                  tags:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/tags'
                  category:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/category'
                  name:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/name'
                  points:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/points'
                  credits:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/credits'
                  team:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/team'
                  level:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/level'
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/player'
                  account:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/account'
                  createdOn:
                    type: string
                    description: Date when the player was created
                  refreshOffset:
                    $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/refreshOffset'
              examples:
                Create Player Response:
                  value:
                    tags: []
                    category: ''
                    imgUrl: ''
                    isAvailable: true
                    points: 0
                    credits: 0
                    team: ''
                    level:
                      id: ''
                      name: ''
                      description: ''
                      imgUrl: ''
                      ordinal: 0
                    player: player-421
                    name: Mr Pete
                    createdOn: '2022-03-11T04:41:39.880Z'
        '400':
          description: Bad request. Check request data.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
        '404':
          description: Required element (team) not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
        '409':
          description: Player is not created. Player already exists.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Players
  '/prizes/{id}':
    get:
      description: |
        Retrieves the prize with the specified ID within the given account
      operationId: getPrize
      summary: Retrieves the specified prize data within the given account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the prize
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Prize retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Prize
                type: object
                required:
                  - id
                  - name
                  - description
                  - credits
                  - tags
                  - category
                  - imgUrl
                  - isAvailable
                  - stock
                  - countLimit
                  - limitCount
                  - active
                  - period
                  - requirement
                properties:
                  id:
                    type: string
                    description: ID of the prize
                  name:
                    type: string
                    description: Name of the prize
                  description:
                    type: string
                    description: Description of the prize
                  credits:
                    type: integer
                    description: The amount of credits required to redeem the prize
                  tags:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                  category:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                  imgUrl:
                    type: string
                    description: URL of the prize image
                  isAvailable:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                  stock:
                    type: object
                    description: Available stock of the element
                    required:
                      - redeemed
                      - available
                      - count
                    properties:
                      redeemed:
                        type: integer
                        description: Number of elements redeemed from the stock
                      available:
                        type: integer
                        description: Number of elements available in stock
                      count:
                        type: integer
                        description: Total number of element allocated to stock
                  countLimit:
                    type: integer
                    description: The number of times a player can redeem the prize within the refresh period
                  limitCount:
                    type: boolean
                    description: 'If set to true, count is limited how many times the element can be completed during the refresh period. If set to false, it is unlimited.'
                  active:
                    type: object
                    description: Period during which the element is active
                    required:
                      - from
                      - to
                    properties:
                      from:
                        type: string
                        description: Start of activity period
                      to:
                        type: string
                        description: End of activity period
                  period:
                    type: string
                    description: Refresh period for the element
                    enum:
                      - daily
                      - weekly
                      - monthly
                      - all-time
                  requirement:
                    type: object
                    required:
                      - tags
                      - missions
                      - achievements
                      - level
                    properties:
                      tags:
                        type: array
                        description: List of tags required to be eligible for the element
                        items:
                          type: string
                          description: Tag
                      missions:
                        type: array
                        description: List of missions required to be eligible for the element
                        items:
                          type: string
                          description: Missions ID
                      achievements:
                        type: array
                        description: List of achievements required to be eligible for the element
                        items:
                          type: string
                          description: Achievement ID
                      level:
                        type: object
                        description: Required level to be eligible for the element
                        required:
                          - id
                          - ordinal
                        properties:
                          id:
                            type: string
                            description: ID of the required level
                          ordinal:
                            type: integer
                            description: Ordinal of the required level
              examples:
                Get Prize:
                  value:
                    stock:
                      redeemed: 2
                      available: 98
                      count: 100
                    name: Coffee
                    description: 'Treat yourself to a hot cup of (house) coffee :)'
                    imgUrl: 'https://images.gamelayer.co/glimages/gltest/coffee.png'
                    category: ''
                    tags: []
                    isAvailable: true
                    credits: 10
                    countLimit: 1
                    id: cup-coffee
                    active:
                      from: '2021-12-31T22:00:00.000Z'
                      to: '2022-12-30T22:00:00.000Z'
                    period: monthly
                    requirement:
                      category: ''
                      tags: []
                      missions: []
                      achievements: []
                      level:
                        id: level-1
                        ordinal: 0
        '404':
          description: Prize not found or no elements matching the language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Prizes
  '/prizes/{id}/claim':
    post:
      description: |
        Claims a prize within the given account for the given player. 
        If a language property is provided in the body, the response will contain 
        translated elements. In case no translations are found for the language, 
        default texts will be used in the response.
      operationId: claimPrize
      summary: Claims a prize within the given account
      parameters:
        - $ref: '#/paths/~1prizes~1%7Bid%7D/get/parameters/0'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - player
                - account
              description: Prize claim request
              properties:
                player:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/player'
                account:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/account'
                language:
                  type: string
                  description: |
                    ISO 639-1 language code for the requested language, like 'en'. If none is provided,
                    texts for the main gamelayer element will be provided. If the given code is 
                    not in the list of currently supported languages or definitions for the specified language query
                    do not exist, an HTTP error response is provided. 
                    List of supported languages is: 
                    -  `en` - English
                    -  `ar` - Arabic
                    -  `zh` - Chinese
                    -  `cs` -Czech
                    -  `fi` - Finnish
                    -  `fr` - French
                    -  `de` - German
                    -  `el` - Greek
                    -  `hi` - Hindi
                    -  `it` - Italian
                    -  `ja` - Japanese
                    -  `kk` - Kazakh
                    -  `pt` - Portuguese
                    -  `ru` - Russian
                    -  `es` - Spanish
                    -  `sv` - Swedish
                    -  `tr` - Turkish
            examples:
              Redeem Prize:
                value:
                  account: gamelayer-test
                  player: player-1
      responses:
        '200':
          description: Prize claimed succesfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - prize
                properties:
                  code:
                    type: integer
                    description: |
                      Status code indicating the success of the operation. Possible values:
                      - 1 - Prize claimed
                      - 2 - Player does not have enough credits to claim the prize
                      - 3 - Prize is out of stock
                      - 5 - Player has exceeded available requests to claim the prize
                      - 6 - Player does not meet prize requirements
                  prize:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema'
              examples:
                Redeem Prize Response:
                  value:
                    code: 2
                    prize:
                      id: cup-coffee
                      name: Coffee
                      description: 'Treat yourself to a hot cup of (house) coffee :)'
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/coffee.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      active:
                        from: '2021-12-31T22:00:00.000Z'
                        to: '2022-12-30T22:00:00.000Z'
                      credits: 10
                      countLimit: 1
                      period: monthly
                      stock:
                        redeemed: 7
                        available: 93
                        count: 100
                      requirement:
                        category: ''
                        tags: []
                        missions: []
                        achievements: []
                        level:
                          id: level-1
                          ordinal: 0
                    player:
                      name: Susan Smith
                      points: 811
                      credits: 162
        '404':
          description: Prize or player not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Prizes
  /prizes:
    get:
      description: |
        Retrieves all the prizes within the given account. If a player name is specified in the 
        parameters, only those prizes the player can currently afford will be returned. By default, 
        the response will contain all available prizes at the time of the request. That includes prizes 
        that have been explicitly set as available and have stock available, if applicable
      operationId: getAllPrizes
      summary: Retrieves all prizes within the given account
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
        - name: player
          in: query
          description: |
            If specified, only the results for which the player is eligible, i.e. fulfills 
            all requirements, will be returned
          schema:
            type: string
        - $ref: '#/paths/~1events/get/parameters/3'
        - name: tags
          in: query
          required: false
          description: |
            Specifies the tags by which to filter results. You may specify a comma-separated list
            of all tags to include and/or exclude (preceding their ID mith a minus sign).
            Defaults to empty string, all tags are returned
          schema:
            type: string
            default: ''
        - $ref: '#/paths/~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - name: timeframe
          in: query
          required: false
          description: |
            Specifies the timeframe by which to filter results. You may specify a comma-separated 
            list of all allowed timeframes for the queried objects. Allowed values are: 
            - `expired` - objects with an active end date in the past
            - `current` - objects currently active
            - `upcoming` - objects with an active start date in the future
            - `all` - all objects, regardless of their active period
          schema:
            type: string
            enum:
              - expired
              - current
              - all
            default: current
        - name: stock
          in: query
          required: false
          description: |
            Specifies the stock availability by which to filter prizes. Allowed values are:
            - `all` - return all prizes regardless of their stock availability
            - `true` - return only prizes where, if stock has been limited, there is more stock available 
            - `false` - return only prizes that are out of stock, i.e. fully redeemed
          schema:
            type: string
            enum:
              - all
              - true
              - false
            default: true
        - $ref: '#/paths/~1events/get/parameters/7'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
      responses:
        '200':
          description: Prizes retrieved successfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema'
              examples:
                Get Prizes:
                  value:
                    - stock:
                        redeemed: 2
                        available: 98
                        count: 100
                      name: Coffee
                      description: 'Treat yourself to a hot cup of (house) coffee :)'
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/coffee.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      credits: 10
                      countLimit: 1
                      id: cup-coffee
                      active:
                        from: '2021-12-31T22:00:00.000Z'
                        to: '2022-12-30T22:00:00.000Z'
                      period: monthly
                      requirement:
                        category: ''
                        tags: []
                        missions: []
                        achievements: []
                        level:
                          id: level-1
                          ordinal: 0
                    - stock:
                        redeemed: 1
                        available: 49
                        count: 50
                      name: Ice Cream
                      description: 'I scream, You scream, We all scream for Ice Cream :)'
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/icecream.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      credits: 100
                      countLimit: 1
                      id: ice-cream
                      active:
                        from: '2021-12-31T22:00:00.000Z'
                        to: '2022-12-30T22:00:00.000Z'
                      period: monthly
                      requirement:
                        category: ''
                        tags: []
                        missions: []
                        achievements: []
                        level:
                          id: level-2
                          ordinal: 1
        '404':
          description: |
            Some elements are missing translations for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Prizes
  '/quizzes/{id}':
    get:
      description: |
        Retrieves quiz with specified ID within the given account.
      operationId: getQuiz
      summary: Retrieves quiz with specified ID within the given account.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the quiz
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
      responses:
        '200':
          description: |
            Quiz retrieved succesfully.
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - description
                  - imgUrl
                  - tags
                  - category
                  - isAvailable
                  - maxScore
                  - requiredPassRate
                  - passMessage
                  - failMessage
                  - isShuffleRequired
                  - timing
                  - reward
                properties:
                  id:
                    type: string
                    description: ID of the quiz
                  name:
                    type: string
                    description: Name of the quiz
                  description:
                    type: string
                    description: Description of the quiz
                  imgUrl:
                    type: string
                    description: URL of the survey quiz
                  tags:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                  category:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                  isAvailable:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                  maxScore:
                    type: number
                    description: Maximum score for the quiz
                  requiredPassRate:
                    type: number
                    description: |
                      Pass rate in percent required to complete the quiz. A value between 0 - 100.
                  passMessage:
                    type: string
                    description: Message dislayed when the quiz is passed.
                  failMessage:
                    type: string
                    description: Message dislayed when the quiz is not passed.
                  isShuffleRequired:
                    type: boolean
                    description: Specifies if questions in the quiz will be shuffled.
                  timing:
                    type: object
                    description: Timing of the quiz.
                    required:
                      - maxSecondsToComplete
                    properties:
                      maxSecondsToComplete:
                        type: number
                        description: Time in seconds to complete a quiz
                  reward:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/reward'
              examples:
                Get Quiz By ID:
                  value:
                    name: Master Quiz - 1
                    description: System test quiz. No strict mode
                    imgUrl: ''
                    category: test
                    isAvailable: true
                    requiredPassRate: 100
                    passMessage: Congratulations. Yuo passed the quiz!
                    failMessage: You did not pass the quiz.
                    isShuffleRequired: false
                    id: st-quiz-1
                    reward:
                      points: 100
                      credits: 1
                      achievements: []
                    timing:
                      maxSecondsToComplete: 120
                    maxScore: 7
                    tags:
                      - tag1
        '404':
          description: Quiz not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Quizzes
  /quizzes:
    get:
      description: |
        Retrieves all the quizzes within the given account. If a player name is specified in the 
        parameters, only those quizzes the player is eligible for will be returned.
        By default, the response will contain all available quizzes at the time of the request. 
        That includes quizzes that have been explicitly set as available.
      operationId: getAllQuizzes
      summary: Retrieves all quizzes within the given account
      parameters:
        - $ref: '#/paths/~1prizes/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/3'
        - $ref: '#/paths/~1prizes/get/parameters/3'
        - $ref: '#/paths/~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
      responses:
        '200':
          description: Quizzes retrieved successfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D/get/responses/200/content/application~1json/schema'
              examples:
                Get Quizzes:
                  value:
                    - name: Master Quiz - 1
                      description: System test quiz. No strict mode
                      imgUrl: ''
                      category: test
                      isAvailable: true
                      requiredPassRate: 100
                      passMessage: Congratulations. Yuo passed the quiz!
                      failMessage: You did not pass the quiz.
                      isShuffleRequired: false
                      id: st-quiz-1
                      reward:
                        points: 100
                        credits: 1
                        achievements: []
                      timing:
                        maxSecondsToComplete: 120
                      maxScore: 7
                      tags:
                        - tag1
                    - name: Master Quiz - 1
                      description: System test quiz. Strict mode
                      imgUrl: ''
                      category: ''
                      isAvailable: true
                      requiredPassRate: 100
                      passMessage: Congratulations. Yuo passed the quiz!
                      failMessage: You did not pass the quiz.
                      isShuffleRequired: false
                      id: st-quiz-2
                      reward:
                        points: 100
                        credits: 1
                        achievements: []
                      timing:
                        maxSecondsToComplete: 120
                      maxScore: 8
      tags:
        - Quizzes
  '/quizzes/{id}/result':
    get:
      description: |
        Retrieves results for the quiz with specified ID within the given account for a player.
      operationId: getQuizResult
      summary: Retrieves quiz results with specified ID within the given account for a player.
      parameters:
        - $ref: '#/paths/~1quizzes~1%7Bid%7D/get/parameters/0'
        - $ref: '#/paths/~1rules/get/parameters/0'
        - name: player
          in: query
          description: |
            ID of the player for which to retrieve the quiz result.
          schema:
            type: string
      responses:
        '200':
          description: |
            Quiz results retrieved succesfully.
          content:
            application/json:
              schema:
                description: Response to get quiz results for a player
                type: object
                required:
                  - quiz
                  - actions
                  - player
                  - results
                properties:
                  quiz:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D/get/responses/200/content/application~1json/schema'
                  actions:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/actions'
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  results:
                    type: array
                    description: List of questions and answers for the quiz completed by the player
                    items:
                      type: object
                      required:
                        - answers
                        - question
                        - score
                      properties:
                        answers:
                          type: array
                          description: player answer(s) to the question
                          items:
                            type: string
                        score:
                          type: number
                          description: Score for the answer.
                        question:
                          $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/questions/items'
              examples:
                Get Quiz Result:
                  value:
                    quiz:
                      name: Master Quiz - 1
                      description: System test quiz. No strict mode
                      imgUrl: ''
                      category: test
                      isAvailable: true
                      requiredPassRate: 100
                      passMessage: Congratulations. Yuo passed the quiz!
                      failMessage: You did not pass the quiz.
                      isShuffleRequired: false
                      id: st-quiz-1
                      reward:
                        points: 100
                        credits: 1
                        achievements: []
                      timing:
                        maxSecondsToComplete: 120
                      maxScore: 7
                      tags: []
                      createdOn: '2023-02-05T08:37:23.923Z'
                      updatedOn: '2023-02-05T08:37:23.923Z'
                    player:
                      name: John Doe
                      points: 100
                      credits: 1
                    actions:
                      count: 2
                      lastScore: 7
                      passed: true
                      startedOn: '2023-02-05T08:58:47.940Z'
                      completedOn: '2023-02-05T08:58:50.789Z'
                    results:
                      - answers:
                          - 6ae91e77
                        score: 4
                        question:
                          type: single
                          imgUrl: ''
                          weight: 4
                          strictMode: true
                          choices:
                            - imgUrl: ''
                              text: Be good
                              correctAnswer: false
                              id: 5fc5fb82
                            - imgUrl: ''
                              text: Be bad
                              correctAnswer: true
                              id: 6ae91e77
                          text: What is the meaning of life
                          id: d1327ed1
                      - answers:
                          - fe566d5d
                        score: 1
                        question:
                          type: single
                          imgUrl: ''
                          weight: 1
                          strictMode: true
                          choices:
                            - imgUrl: ''
                              text: Be good - 2
                              correctAnswer: true
                              id: fe566d5d
                            - imgUrl: ''
                              text: Be bad - 2
                              correctAnswer: false
                              id: f42f82a8
                          text: What is the meaning of life - 2
                          id: a9c1ca84
                      - answers:
                          - 64d3368c
                        score: 2
                        question:
                          type: single
                          imgUrl: ''
                          weight: 2
                          strictMode: true
                          choices:
                            - imgUrl: ''
                              text: Be good - 3
                              correctAnswer: true
                              id: 64d3368c
                            - imgUrl: ''
                              text: Be bad - 3
                              correctAnswer: false
                              id: 48bb3fdd
                          text: What is the meaning of life - 3
                          id: 74a9269f
        '404':
          description: Quiz or player not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Quizzes
  '/quizzes/{id}/start':
    post:
      description: |
        Starts given quiz with specified ID within the given account for the given player.
        If a quiz is already started and active for the player, no action will be taken 
        (i.e. no quiz re-start). Current quiz qeustions for the player will be returned
        in the response.
      operationId: startQuiz
      summary: Starts given quiz with specified ID within the given account for the given player.
      parameters:
        - $ref: '#/paths/~1quizzes~1%7Bid%7D/get/parameters/0'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - player
                - account
              properties:
                account:
                  type: string
                  description: ID of the account for the operation
                player:
                  type: string
                  description: ID of the player for whom to perform the operation
            examples:
              Start Quiz:
                value:
                  account: st-account
                  player: st-player-1
      responses:
        '200':
          description: |
            Quiz started.
          content:
            application/json:
              schema:
                description: Response to start quiz for a given player
                type: object
                required:
                  - quiz
                  - actions
                  - questions
                  - player
                properties:
                  quiz:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D/get/responses/200/content/application~1json/schema'
                  actions:
                    type: object
                    required:
                      - startedOn
                      - count
                      - lastScore
                    properties:
                      startedOn:
                        type: string
                        description: Time when the player started the quiz
                      completedOn:
                        type: string
                        description: Last time when the player completed the quiz
                      count:
                        type: number
                        description: Amount of times the player has completed the quiz
                      lastScore:
                        type: number
                        description: Score for last completed quiz
                  questions:
                    type: array
                    description: List of questions for the quiz
                    items:
                      type: object
                      required:
                        - id
                        - imgUrl
                        - type
                        - text
                        - weight
                        - strictMode
                        - choices
                      properties:
                        id:
                          type: string
                          description: Unique ID of the question in the quiz
                        imgUrl:
                          type: string
                          description: URL of the quiz question
                        type:
                          type: string
                          description: |
                            Type of question. Possible values are:
                            - `single` - question has only one correct answer
                            - `multi` - question may have multiple correct answers
                        weight:
                          type: number
                          description: Weight of the answer when calculating final score for the quiz
                        strictMode:
                          type: boolean
                          description: 'If set, all answers must be correct for the question.'
                        text:
                          type: string
                          description: Question text
                        choices:
                          type: array
                          description: List of choices
                          items:
                            type: object
                            required:
                              - id
                              - imgUrl
                              - text
                              - correctAnswer
                            properties:
                              id:
                                type: string
                                description: ID of the choice text
                              imgUrl:
                                type: string
                                description: URL of the quiz question
                              text:
                                type: string
                                description: Choice text
                              correctAnswer:
                                type: boolean
                                description: 'if true, represents correct answer'
                  player:
                    description: Response to Get Player
                    type: object
                    properties:
                      name:
                        $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/name'
                      points:
                        $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/points'
                      credits:
                        $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/credits'
              examples:
                Get Quiz Result:
                  value:
                    quiz:
                      id: st-quiz-1
                      name: Master Quiz - 1
                      description: System test quiz. No strict mode
                      imgUrl: ''
                      category: test
                      isAvailable: true
                      maxScore: 7
                      requiredPassRate: 100
                      passMessage: Congratulations. Yuo passed the quiz!
                      failMessage: You did not pass the quiz.
                      isShuffleRequired: false
                      timing:
                        maxSecondsToComplete: 120
                      reward:
                        points: 100
                        credits: 1
                        achievements: []
                    actions:
                      count: 0
                      lastScore: 0
                      passed: false
                      startedOn: '2023-02-05T08:44:50.425Z'
                    questions:
                      - type: single
                        imgUrl: ''
                        weight: 4
                        strictMode: true
                        text: What is the meaning of life
                        choices:
                          - imgUrl: ''
                            text: Be good
                            correctAnswer: false
                            id: 5fc5fb82
                          - imgUrl: ''
                            text: Be bad
                            correctAnswer: true
                            id: 6ae91e77
                        id: d1327ed1
                      - type: single
                        imgUrl: ''
                        weight: 1
                        strictMode: true
                        text: What is the meaning of life - 2
                        choices:
                          - imgUrl: ''
                            text: Be good - 2
                            correctAnswer: true
                            id: fe566d5d
                          - imgUrl: ''
                            text: Be bad - 2
                            correctAnswer: false
                            id: f42f82a8
                        id: a9c1ca84
                      - type: single
                        imgUrl: ''
                        weight: 2
                        strictMode: true
                        text: What is the meaning of life - 3
                        choices:
                          - imgUrl: ''
                            text: Be good - 3
                            correctAnswer: true
                            id: 64d3368c
                          - imgUrl: ''
                            text: Be bad - 3
                            correctAnswer: false
                            id: 48bb3fdd
                        id: 74a9269f
                    player:
                      name: John Doe
                      points: 0
                      credits: 0
        '400':
          description: Quiz has not been started or answers are missing/invalid
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
        '404':
          description: Quiz or player not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Quizzes
  '/quizzes/{id}/complete':
    post:
      description: |
        Completes given quiz with specified ID within the given account for the given player.
      operationId: completeQuizz
      summary: Completes given quiz with specified ID within the given account for the given player.
      parameters:
        - $ref: '#/paths/~1quizzes~1%7Bid%7D/get/parameters/0'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - player
                - account
                - answers
              properties:
                account:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/account'
                player:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/player'
                answers:
                  type: array
                  description: |
                    Answers to the questions given upon completing the quiz/survey in JSON format. Answers
                    should be an array of objects.
                  items:
                    type: object
                    required:
                      - questionId
                      - answerIds
                    properties:
                      questionId:
                        type: string
                        description: The id of the question
                      answerIds:
                        type: array
                        description: |
                          A list of answer IDs for the question provided by the player. In case the 
                          type of question is `single`, array would contain only one answer ID.
                        items:
                          type: string
                          description: Answer ID provided by the player
            examples:
              Complete Quiz:
                value:
                  account: account-id
                  player: player-id
                  answers:
                    - questionId: d1327ed1
                      answerIds:
                        - 6ae91e77
                    - questionId: a9c1ca84
                      answerIds:
                        - fe566d5d
                    - questionId: 74a9269f
                      answerIds:
                        - 64d3368c
      responses:
        '200':
          description: |
            Quiz completed.
          content:
            application/json:
              schema:
                description: Response to complete quiz request.
                type: object
                required:
                  - quiz
                  - actions
                  - player
                  - results
                  - progress
                properties:
                  quiz:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D/get/responses/200/content/application~1json/schema'
                  actions:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/actions'
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  results:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1result/get/responses/200/content/application~1json/schema/properties/results'
                  progress:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/responses/200/content/application~1json/schema/properties/progress'
              examples:
                Get Quiz Result:
                  value:
                    quiz:
                      id: st-quiz-1
                      name: Master Quiz - 1
                      description: System test quiz. No strict mode
                      imgUrl: ''
                      category: test
                      isAvailable: true
                      maxScore: 7
                      requiredPassRate: 100
                      passMessage: Congratulations. Yuo passed the quiz!
                      failMessage: You did not pass the quiz.
                      isShuffleRequired: false
                      timing:
                        maxSecondsToComplete: 120
                      reward:
                        points: 100
                        credits: 1
                        achievements: []
                    actions:
                      count: 2
                      lastScore: 7
                      passed: true
                      startedOn: '2023-02-05T08:58:47.940Z'
                      completedOn: '2023-02-05T08:58:50.789Z'
                    player:
                      name: John Doe
                      points: 100
                      credits: 1
                    results:
                      - answers:
                          - 6ae91e77
                        score: 4
                        question:
                          type: single
                          imgUrl: ''
                          weight: 4
                          strictMode: true
                          text: What is the meaning of life
                          choices:
                            - imgUrl: ''
                              text: Be good
                              correctAnswer: false
                              id: 5fc5fb82
                            - imgUrl: ''
                              text: Be bad
                              correctAnswer: true
                              id: 6ae91e77
                          id: d1327ed1
                      - answers:
                          - fe566d5d
                        score: 1
                        question:
                          type: single
                          imgUrl: ''
                          weight: 1
                          strictMode: true
                          text: What is the meaning of life - 2
                          choices:
                            - imgUrl: ''
                              text: Be good - 2
                              correctAnswer: true
                              id: fe566d5d
                            - imgUrl: ''
                              text: Be bad - 2
                              correctAnswer: false
                              id: f42f82a8
                          id: a9c1ca84
                      - answers:
                          - 64d3368c
                        score: 2
                        question:
                          type: single
                          imgUrl: ''
                          weight: 2
                          strictMode: true
                          text: What is the meaning of life - 3
                          choices:
                            - imgUrl: ''
                              text: Be good - 3
                              correctAnswer: true
                              id: 64d3368c
                            - imgUrl: ''
                              text: Be bad - 3
                              correctAnswer: false
                              id: 48bb3fdd
                          id: 74a9269f
                    progress:
                      points:
                        before: 0
                        earned: 100
                      credits:
                        before: 0
                        earned: 1
                      levels:
                        completed:
                          - id: st-level-2
                            name: Test Level Two
                            description: Objectives - 5 points
                            imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                            ordinal: 1
                          - id: st-level-3
                            name: Test Level Three
                            description: Objectives - 10 points
                            imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                            ordinal: 2
                        started: null
                      missions: []
                      achievements: []
        '400':
          description: Invalid request data or quiz not started in time.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
        '404':
          description: Quiz or player not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Quizzes
  '/raffles/{id}':
    get:
      description: |
        Retrieves the raffle ticket with the specified ID within the given account
      operationId: getRaffle
      summary: Retrieves the specified raffle ticket within the given account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the raffle
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Raffle ticket retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Raffle
                type: object
                required:
                  - id
                  - name
                  - description
                  - imgUrl
                  - tags
                  - category
                  - isAvailable
                  - active
                  - drawTime
                  - credits
                  - stock
                  - countLimit
                  - limitCount
                  - period
                  - requirement
                properties:
                  id:
                    type: string
                    description: ID of the raffle
                  name:
                    type: string
                    description: Name of the raffle
                  description:
                    type: string
                    description: Description of the raffle
                  tags:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                  category:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                  imgUrl:
                    type: string
                    description: URL of the raffle image
                  isAvailable:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                  drawTime:
                    type: string
                    description: Next drawtime for the raffle
                  credits:
                    type: integer
                    description: The amount of credits required to redeem a raffle ticket
                  stock:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/stock'
                  countLimit:
                    type: integer
                    description: The number of times a player can redeem a raffle ticket within the refresh period
                  limitCount:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/limitCount'
                  active:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/active'
                  period:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/period'
                  requirement:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/requirement'
              examples:
                Get Raffle:
                  value:
                    stock:
                      redeemed: 0
                      available: 30
                    name: Weekly Prize Draw
                    description: 'Enter the weekly draw for a chance to win great prizes! Draw takes place every Sunday at 19:00!'
                    imgUrl: 'https://images.gamelayer.co/glimages/gltest/raffle.png'
                    priority: 0
                    category: ''
                    tags: []
                    isAvailable: true
                    credits: 1
                    id: weekly-raffle
        '404':
          description: Raffle not found or no elements matching the language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Raffles
  /raffles:
    get:
      description: |
        Retrieves all the raffles within the given account. If a player name is specified in the 
        parameters, only those raffles the player can currently afford will be returned.
        By default, the response will contain all available raffles at the time of the request. 
        That includes raffles that have been explicitly set as available and have stock available, 
        if applicable
      operationId: getAllRaffles
      summary: Retrieves all raffles within the given account
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1prizes/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/3'
        - $ref: '#/paths/~1prizes/get/parameters/3'
        - $ref: '#/paths/~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1prizes/get/parameters/7'
        - $ref: '#/paths/~1prizes/get/parameters/8'
        - $ref: '#/paths/~1events/get/parameters/7'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
      responses:
        '200':
          description: Raffles retrieved successfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1raffles~1%7Bid%7D/get/responses/200/content/application~1json/schema'
              examples:
                Get Raffles:
                  value:
                    - stock:
                        redeemed: 0
                        available: 30
                      name: Weekly Prize Draw
                      description: 'Enter the weekly draw for a chance to win great prizes! Draw takes place every Sunday at 19:00!'
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/raffle.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      credits: 1
                      id: weekly-raffle
        '404':
          description: |
            Some elements are missing translations for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Raffles
  '/raffles/{id}/claim':
    post:
      description: |
        Claims a raffle ticket within the given account for the given player. 
        If a language property is provided in the body, the response will contain 
        translated elements. In case no translations are found for the language, 
        default texts will be used in the response.
      operationId: claimRaffle
      summary: Claims a raffle ticket within the given account
      parameters:
        - $ref: '#/paths/~1raffles~1%7Bid%7D/get/parameters/0'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Raffle redeem request
              required:
                - player
                - account
              properties:
                player:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/player'
                account:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/account'
                language:
                  $ref: '#/paths/~1prizes~1%7Bid%7D~1claim/post/requestBody/content/application~1json/schema/properties/language'
            examples:
              Claim Raffle Ticket:
                value:
                  account: gamelayer-test
                  player: player-1
      responses:
        '200':
          description: Raffle ticket claimed succesfully
          content:
            application/json:
              schema:
                description: Response to Redeem Raffle ticket
                type: object
                required:
                  - code
                  - message
                  - player
                  - raffle
                properties:
                  code:
                    type: integer
                    description: |
                      Status code indicating the success of the operation. Possible values:
                      - 1 - Raffle ticket redeemed
                      - 2 - Player does not have enough credits to redeem raffle ticket
                      - 5 - Player has exceeded available requests to redeem the raffle ticket
                      - 6 - Player does not meet raffle requirements
                  message:
                    type: string
                    description: Clear text status description
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  raffle:
                    type: object
                    required:
                      - id
                      - name
                      - description
                      - imgUrl
                      - category
                      - tags
                      - isAvailable
                      - credits
                      - active
                      - drawTime
                      - period
                    properties:
                      id:
                        $ref: '#/paths/~1raffles~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                      name:
                        $ref: '#/paths/~1raffles~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                      description:
                        $ref: '#/paths/~1raffles~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                      imgUrl:
                        $ref: '#/paths/~1raffles~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                      category:
                        $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                      tags:
                        $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                      isAvailable:
                        $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                      credits:
                        $ref: '#/paths/~1raffles~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/credits'
                      active:
                        $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/active'
                      drawTime:
                        $ref: '#/paths/~1raffles~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/drawTime'
                      period:
                        $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/period'
              examples:
                Claim Raffle Ticket Response:
                  value:
                    code: 1
                    message: Raffle ticket redeemed successfully
                    raffle:
                      id: weekly-raffle
                      name: Weekly Prize Draw
                      description: 'Enter the weekly draw for a chance to win great prizes! Draw takes place every Sunday at 19:00!'
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/raffle.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      credits: 1
                      active:
                        from: '2021-12-31T22:00:00.000Z'
                        to: '2022-12-30T22:00:00.000Z'
                      period: weekly
                    player:
                      name: Susan Smith
                      points: 811
                      credits: 182
        '404':
          description: Raffle or player not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Raffles
  '/rules/{id}':
    get:
      description: |
        Retrieves information of given rule ID
      operationId: getRule
      summary: Retrieves the specified rule data within the given account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the rule
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
      responses:
        '200':
          description: Rule retrieved succesfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
              examples:
                Get Rule:
                  value:
                    name: New rule name
                    description: Rock'n roll
                    imgUrl: ''
                    isAvailable: true
                    priority: 100
                    breakOnEval: false
                    id: rule-1
                    conditionId: startDateOrCreatedOnRange
                    actionId: actionMultiplyGainedPoints
                    conditionParams:
                      minDays:
                        value: 8
                      maxDays:
                        value: 10
                      days:
                        value: 10
                      startDate:
                        value: '2023-09-04'
                    actionParams:
                      multiplier:
                        value: 4
                    createdOn: '2023-09-04T02:32:16.487Z'
                    updatedOn: '2023-09-04T02:32:16.518Z'
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Rules
    patch:
      description: |
        Updates a rule within the given account (partial update). Partial data update allows you to specify
        only certain field to be updated, i.e. if a field is not present in the request, it will not be modified
        on the updated document
      operationId: updateRule
      summary: Updates a rule within the given account
      parameters:
        - $ref: '#/paths/~1rules~1%7Bid%7D/get/parameters/0'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: Rule updated successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad request. Check request data.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Rules
  /rules:
    get:
      description: |
        Retrieves all rules within the given account.
      operationId: getAllRules
      summary: Retrieves all rules within the given account
      parameters:
        - name: account
          in: query
          description: ID of the account to use for the query
          required: true
          schema:
            type: string
        - name: sort
          in: query
          required: false
          description: |
            Specifies the field by which to order results. You may specify the sort 
            criterion for queried results. Results are sorted in descending order, 
            i.e. most recent and highest values first, unless otherwise specified in 
            the order parameter. Defaults to nothing, i.e. results are returned unsorted
          schema:
            type: string
        - name: order
          in: query
          required: false
          description: |
            Specifies the sort order to use for the sorted queries. Allowed values are:
            - `asc` - ascending order, i.e. lowest or oldest first
            - `desc` - descending order, i.e. highest or most recent first
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
      responses:
        '200':
          description: Rules retrieved successfully
          headers:
            X-Total-Count:
              description: |
                Total number of results available conforming to the query criteria specified in 
                the request parameters. In case returned data contains data from multiple elements
                X-Total-Count-Id specifies the element ID which has most elements complying to 
                the query
              schema:
                type: integer
            X-Limit-Count:
              description: |
                Result pagination limit count specified (or implicitly applied) in the 
                request, i.e. how many results are included in the response
              schema:
                type: integer
            X-Skip-Count:
              description: |
                Result pagination skip count (offset) specified (or implicitly applied) in 
                the request, i.e. how many results have been skipped from the beginning in 
                the response
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      tags:
        - Rules
  '/surveys/{id}':
    get:
      description: |
        Retrieves a survey with specified ID within the given account.
      operationId: getSurvey
      summary: Retrieves a survey with specified ID within the given account.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the survey
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
      responses:
        '200':
          description: |
            Survey retrieved succesfully.
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - description
                  - imgUrl
                  - tags
                  - category
                  - isAvailable
                  - isShuffleRequired
                  - questions
                  - reward
                  - createdOn
                  - updatedOn
                properties:
                  id:
                    type: string
                    description: ID of the survey
                  name:
                    type: string
                    description: Name of the survey
                  description:
                    type: string
                    description: Description of the survey
                  imgUrl:
                    type: string
                    description: URL of the survey image
                  tags:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                  category:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                  isAvailable:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                  isShuffleRequired:
                    type: boolean
                    description: Specifies if questions in the survey will be shuffled.
                  questions:
                    type: array
                    description: List of questions for the survey
                    items:
                      type: object
                      required:
                        - id
                        - imgUrl
                        - type
                        - text
                        - choices
                      properties:
                        id:
                          type: string
                          description: Unique ID of the question in the survey
                        imgUrl:
                          type: string
                          description: URL of the survey question
                        type:
                          type: string
                          description: |
                            Type of question. Possible values are:
                            - `single` - question has only answer option
                            - `multi` - question may have multiple answer options
                        text:
                          type: string
                          description: Text of the question
                        choices:
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - text
                              - imgUrl
                            properties:
                              id:
                                type: string
                                description: Unique ID of the choice within the survey
                              imgUrl:
                                type: string
                                description: URL of the survey choice image
                              text:
                                type: string
                                description: Text for the choice
                  reward:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/reward'
                  createdOn:
                    type: string
                    description: Time when element was created
                  updatedOn:
                    type: string
                    description: Time when element was updated
              examples:
                Get Survey:
                  value:
                    name: Survey Two
                    description: ''
                    imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                    category: ''
                    tags: []
                    isAvailable: true
                    isShuffleRequired: true
                    id: st-survey-2
                    questions:
                      - type: single
                        imgUrl: ''
                        id: t_ldfjzfw8_qwhfa15ki
                        text: q1
                        choices:
                          - imgUrl: ''
                            text: r1-1
                            id: s_ldfk0icu_qigk0ctdr
                          - imgUrl: ''
                            text: r1-2
                            id: r_ldfjzpog_lfmcn095v
                          - imgUrl: ''
                            text: r1-3
                            id: d_ldfjzv4g_4g8xht4f0
                      - type: single
                        imgUrl: ''
                        id: h_ldfk02s4_8syju702w
                        text: q2
                        choices:
                          - imgUrl: ''
                            text: r2-1
                            id: r_ldfk0icu_374txinmb
                          - imgUrl: ''
                            text: r2-2
                            id: k_ldfk09na_bkpawnwse
                          - imgUrl: ''
                            text: r2-3
                            id: w_ldfk0d10_wt6v0j6sg
                    reward:
                      points: 0
                      credits: 0
                      achievements: []
                    createdOn: '2023-01-28T06:10:25.116Z'
                    updatedOn: '2023-01-28T06:10:25.116Z'
        '404':
          description: |
            Survey not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Surveys
  /surveys:
    get:
      description: |
        Retrieves all surveys within the given account. If a player name is specified in the 
        parameters, only those surveys the player is eligible for will be returned.
        By default, the response will contain all available surveys at the time of the request. 
        That includes surveys that have been explicitly set as available.
      operationId: getAllSurveys
      summary: Retrieves all surveys within the given account.
      parameters:
        - $ref: '#/paths/~1prizes/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/3'
        - $ref: '#/paths/~1prizes/get/parameters/3'
        - $ref: '#/paths/~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
      responses:
        '200':
          description: |
            Surveys retrieved succesfully.
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - name
                    - description
                    - imgUrl
                    - tags
                    - category
                    - isAvailable
                    - isShuffleRequired
                    - reward
                    - createdOn
                    - updatedOn
                  properties:
                    id:
                      $ref: '#/paths/~1surveys~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/id'
                    name:
                      $ref: '#/paths/~1surveys~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/name'
                    description:
                      $ref: '#/paths/~1surveys~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/description'
                    imgUrl:
                      $ref: '#/paths/~1surveys~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/imgUrl'
                    tags:
                      $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                    category:
                      $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                    isAvailable:
                      $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                    isShuffleRequired:
                      $ref: '#/paths/~1surveys~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/isShuffleRequired'
                    reward:
                      $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/reward'
                    createdOn:
                      $ref: '#/paths/~1surveys~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/createdOn'
                    updatedOn:
                      $ref: '#/paths/~1surveys~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/updatedOn'
              examples:
                Get surveys:
                  value:
                    - name: st-survey-1
                      description: ''
                      imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      isShuffleRequired: true
                      id: st-survey-1
                      reward:
                        points: 0
                        credits: 0
                        achievements: []
                      createdOn: '2023-01-25T05:58:17.834Z'
                      updatedOn: '2023-01-25T05:58:17.835Z'
                    - name: Survey Two
                      description: ''
                      imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      isShuffleRequired: true
                      id: st-survey-2
                      reward:
                        points: 0
                        credits: 0
                        achievements: []
                      createdOn: '2023-01-28T06:10:25.116Z'
                      updatedOn: '2023-01-28T06:10:25.116Z'
      tags:
        - Surveys
  '/surveys/{id}/result':
    get:
      description: |
        Retrieves results for the survey with specified ID within the given account. If player is provided,
        player details with player answers will be provided.
      operationId: getSurveyResult
      summary: Retrieves survey results with specified ID within the given account for a player.
      parameters:
        - $ref: '#/paths/~1surveys~1%7Bid%7D/get/parameters/0'
        - $ref: '#/paths/~1rules/get/parameters/0'
        - name: player
          in: query
          description: |
            ID of the player for which to retrieve the survey result.
          schema:
            type: string
      responses:
        '200':
          description: |
            Survey results retrieved succesfully.
          content:
            application/json:
              schema:
                type: object
                required:
                  - survey
                  - results
                properties:
                  survey:
                    $ref: '#/paths/~1surveys~1%7Bid%7D/get/responses/200/content/application~1json/schema'
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  results:
                    type: object
                    required:
                      - questions
                    properties:
                      questions:
                        type: array
                        description: List of questions and responses for the survey completed by the player
                        items:
                          type: object
                          required:
                            - id
                            - imgUrl
                            - type
                            - text
                            - choices
                          properties:
                            id:
                              type: string
                              description: Unique ID of the question in the survey
                            imgUrl:
                              type: string
                              description: URL of the survey question
                            type:
                              $ref: '#/paths/~1surveys~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/questions/items/properties/type'
                            text:
                              type: string
                              description: Text of the question
                            choices:
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - text
                                  - value
                                  - percent
                                  - rank
                                  - imgUrl
                                properties:
                                  id:
                                    type: string
                                    description: Unique ID of the choice within the survey
                                  imgUrl:
                                    type: string
                                    description: URL of the survey choice image
                                  text:
                                    type: string
                                    description: Text for the choice
                                  value:
                                    type: number
                                    description: How many times the choice has been selected
                                  percent:
                                    type: number
                                    description: Answer percentage of the choice
                                  rank:
                                    type: number
                                    description: Rank of the choice
                            answers:
                              type: array
                              description: player answer(s) to the question
                              items:
                                type: string
              examples:
                Get Survey Result:
                  value:
                    survey:
                      id: st-survey-2
                      name: Survey Two
                      description: ''
                      imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                      category: ''
                      isAvailable: true
                      isShuffleRequired: true
                      reward:
                        points: 0
                        credits: 0
                        achievements: []
                    results:
                      questions:
                        - id: t_ldfjzfw8_qwhfa15ki
                          text: q1
                          imgUrl: ''
                          type: single
                          choices:
                            - id: r_ldfjzpog_lfmcn095v
                              value: 4
                              rank: 1
                              percent: 100
                              text: r1-2
                              imgUrl: ''
                            - id: s_ldfk0icu_qigk0ctdr
                              value: 0
                              rank: 2
                              percent: 0
                              text: r1-1
                              imgUrl: ''
                            - id: d_ldfjzv4g_4g8xht4f0
                              value: 0
                              rank: 3
                              percent: 0
                              text: r1-3
                              imgUrl: ''
                        - id: h_ldfk02s4_8syju702w
                          text: q2
                          imgUrl: ''
                          type: single
                          choices:
                            - id: r_ldfk0icu_374txinmb
                              value: 4
                              rank: 1
                              percent: 100
                              text: r2-1
                              imgUrl: ''
                            - id: w_ldfk0d10_wt6v0j6sg
                              value: 1
                              rank: 2
                              percent: 25
                              text: r2-3
                              imgUrl: ''
                            - id: k_ldfk09na_bkpawnwse
                              value: 0
                              rank: 3
                              percent: 0
                              text: r2-2
                              imgUrl: ''
        '404':
          description: |
            Survey or player not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Surveys
  '/surveys/{id}/complete':
    post:
      description: |
        Completes given survey with specified ID within the given account for the given player.
      operationId: completeSurvey
      summary: Completes given survey with specified ID within the given account for the given player.
      parameters:
        - $ref: '#/paths/~1surveys~1%7Bid%7D/get/parameters/0'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - player
                - account
                - answers
              properties:
                account:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/account'
                player:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/player'
                answers:
                  type: array
                  description: |
                    Answers to the questions given upon completing the quiz/survey in JSON format. Answers
                    should be an array of objects.
                  items:
                    type: object
                    required:
                      - questionId
                      - answerIds
                    properties:
                      questionId:
                        type: string
                        description: The id of the question
                      answerIds:
                        type: array
                        description: |
                          A list of answer IDs for the question provided by the player. In case the 
                          type of question is `single`, array would contain only one answer ID.
                        items:
                          type: string
                          description: Answer ID provided by the player
            examples:
              Complete Survey:
                value:
                  account: st-account
                  player: st-player-1
                  answers:
                    - questionId: t_ldfjzfw8_qwhfa15ki
                      answerIds:
                        - r_ldfjzpog_lfmcn095v
                    - questionId: h_ldfk02s4_8syju702w
                      answerIds:
                        - r_ldfk0icu_374txinmb
      responses:
        '200':
          description: |
            API response to survey completed request.
          content:
            application/json:
              schema:
                description: Response to complete survey request.
                type: object
                required:
                  - survey
                  - actions
                  - player
                  - results
                  - progress
                properties:
                  survey:
                    $ref: '#/paths/~1surveys~1%7Bid%7D/get/responses/200/content/application~1json/schema'
                  player:
                    $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/responses/200/content/application~1json/schema/properties/player'
                  actions:
                    type: object
                    required:
                      - startedOn
                      - completedOn
                      - firstCompletedOn
                      - count
                    properties:
                      startedOn:
                        type: string
                        description: Time when the player started the survey
                      firstCompletedOn:
                        type: string
                        description: Last time when the player completed the survey
                      completedOn:
                        type: string
                        description: Last time when the player completed the survey
                      count:
                        type: number
                        description: Amount of times the player has completed the survey
                  results:
                    type: object
                    required:
                      - questions
                    properties:
                      questions:
                        $ref: '#/paths/~1surveys~1%7Bid%7D~1result/get/responses/200/content/application~1json/schema/properties/results/properties/questions'
                  progress:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/responses/200/content/application~1json/schema/properties/progress'
              examples:
                Complete Survey:
                  value:
                    survey:
                      id: st-survey-2
                      name: Survey Two
                      description: ''
                      imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                      category: ''
                      isAvailable: true
                      isShuffleRequired: true
                      reward:
                        points: 0
                        credits: 0
                        achievements: []
                    actions:
                      count: 1
                      startedOn: '2023-02-05T07:40:46.813Z'
                      completedOn: '2023-02-05T07:40:46.814Z'
                    player:
                      name: John Doe
                      points: 0
                      credits: 0
                    results:
                      - question:
                          id: t_ldfjzfw8_qwhfa15ki
                          text: q1
                          imgUrl: ''
                          type: single
                          choices:
                            - id: r_ldfjzpog_lfmcn095v
                              value: 5
                              rank: 1
                              percent: 100
                              text: r1-2
                              imgUrl: ''
                            - id: s_ldfk0icu_qigk0ctdr
                              value: 0
                              rank: 2
                              percent: 0
                              text: r1-1
                              imgUrl: ''
                            - id: d_ldfjzv4g_4g8xht4f0
                              value: 0
                              rank: 3
                              percent: 0
                              text: r1-3
                              imgUrl: ''
                        answer:
                          - r_ldfjzpog_lfmcn095v
                      - question:
                          id: h_ldfk02s4_8syju702w
                          text: q2
                          imgUrl: ''
                          type: single
                          choices:
                            - id: r_ldfk0icu_374txinmb
                              value: 5
                              rank: 1
                              percent: 100
                              text: r2-1
                              imgUrl: ''
                            - id: w_ldfk0d10_wt6v0j6sg
                              value: 1
                              rank: 2
                              percent: 20
                              text: r2-3
                              imgUrl: ''
                            - id: k_ldfk09na_bkpawnwse
                              value: 0
                              rank: 3
                              percent: 0
                              text: r2-2
                              imgUrl: ''
                        answer:
                          - r_ldfk0icu_374txinmb
                    progress:
                      points:
                        before: 0
                        earned: 0
                      credits:
                        before: 0
                        earned: 0
                      levels:
                        completed:
                          - id: st-level-1
                            name: Test Level One
                            description: Objectives - none (all start here)
                            imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                            ordinal: 0
                        started:
                          id: st-level-2
                          name: Test Level Two
                          description: Objectives - 5 points
                          imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                          ordinal: 1
                          startedOn: '2023-02-05T09:40:46+02:00'
                      missions: []
                      achievements: []
        '400':
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
        '404':
          description: Survey or player not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Surveys
  '/streaks/{id}':
    get:
      description: |
        Retrieves the streak with the specified ID within the given account
      operationId: getStreak
      summary: Retrieves the specified streak data within the given account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the streak
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: |
            Streak retrieved succesfully
          content:
            application/json:
              schema:
                description: Response to Get Streak
                type: object
                required:
                  - id
                  - name
                  - description
                  - imgUrl
                  - tags
                  - category
                  - isAvailable
                  - priority
                  - period
                  - limitCount
                  - countLimit
                  - active
                  - objectives
                  - reward
                properties:
                  id:
                    type: string
                    description: ID of the streak
                  name:
                    type: string
                    description: Name of the streak
                  description:
                    type: string
                    description: Description of the streak
                  imgUrl:
                    type: string
                    description: URL of the streak image
                  tags:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                  category:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                  isAvailable:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                  priority:
                    type: integer
                    description: Priority of the streak
                  period:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/period'
                  limitCount:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/limitCount'
                  countLimit:
                    type: integer
                    description: Number of times this operation can be performed by the player during the refresh period.
                  active:
                    $ref: '#/paths/~1prizes~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/active'
                  objectives:
                    $ref: '#StreakObjectives'
                  reward:
                    $ref: '#StreakReward'
              examples:
                Get Streak:
                  value:
                    isAvailable: true
                    description: Streak One Description
                    imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                    tags: []
                    category: ''
                    limitCount: true
                    countLimit: 5
                    priority: 0
                    objectives:
                      - run-mission
                    id: streak-1
                    name: Streak One
                    active:
                      from: '2024-03-24T07:25:09.000Z'
                      to: '2024-06-30T06:25:09.000Z'
                    period: weekly
                    reward:
                      multiplier: 1
                      points: 1
                      credits: 0
                      achievements: []
                    account: gltest
        '404':
          description: Streak not found or no elements matching the language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Streaks
  /streaks:
    get:
      description: |
        Retrieves all the streaks within the given account. By default, the request returns 
        all active streaks at the time of the request. If the showAll parameter is set to true 
        all streaks defined in the account, regardless of their active period, will be returned 
        instead. More advanced queries can be specified with the timeframe query. 

        Results are sorted by active start date.
      operationId: getAllStreaks
      summary: Retrieves all streaks within the given account
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/3'
        - $ref: '#/paths/~1prizes/get/parameters/3'
        - $ref: '#/paths/~1prizes/get/parameters/7'
        - $ref: '#/paths/~1events/get/parameters/4'
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/7'
      responses:
        '200':
          description: Streaks retrieved successfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1streaks~1%7Bid%7D/get/responses/200/content/application~1json/schema'
              examples:
                Get Streaks:
                  value:
                    - isAvailable: true
                      description: Streak One Description
                      imgUrl: 'https://images.gamelayer.co/glimages/default/defaultimg.png'
                      tags: []
                      category: ''
                      limitCount: true
                      countLimit: 5
                      priority: 0
                      objectives:
                        - run-mission
                      id: streak-1
                      name: Streak One
                      active:
                        from: '2024-03-24T07:25:09.000Z'
                        to: '2024-06-30T06:25:09.000Z'
                      period: weekly
                      reward:
                        multiplier: 1
                        points: 1
                        credits: 0
                        achievements: []
                      account: gltest
        '404':
          description: |
            Some elements are missing translations for the given language filter.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Streaks
  '/teams/{id}':
    get:
      description: |
        Retrieves the team data with the specified ID within the given account
      operationId: getTeam
      summary: Retrieves the specified team data within the given account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the team
          schema:
            type: string
        - $ref: '#/paths/~1rules/get/parameters/0'
      responses:
        '200':
          description: |
            Team retrieved succesfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - team
                  - players
                properties:
                  team:
                    $ref: '#/paths/~1teams~1%7Bid%7D/patch/responses/200/content/application~1json/schema'
                  players:
                    type: array
                    items:
                      type: object
                      required:
                        - tags
                        - category
                        - points
                        - credits
                        - player
                        - name
                        - createdOn
                      properties:
                        tags:
                          $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                        category:
                          $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                        points:
                          $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/points'
                        credits:
                          $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/credits'
                        player:
                          $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/player'
                        name:
                          $ref: '#/paths/~1players/post/requestBody/content/application~1json/schema/properties/name'
                        createdOn:
                          $ref: '#/paths/~1players~1%7Bplayer%7D/get/responses/200/content/application~1json/schema/properties/createdOn'
              examples:
                Get Team:
                  value:
                    team:
                      description: Home of the brave!
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/team1.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      points: 1521
                      credits: 178
                      level:
                        id: ''
                        name: ''
                        description: ''
                        imgUrl: ''
                        ordinal: 0
                      id: a-team
                      name: The A-Team
                      createdOn: '2022-03-03T06:00:00.825Z'
                    players:
                      - tags:
                          - coder
                        category: ''
                        points: 0
                        credits: 998
                        player: player-080277
                        name: Jane Doe
                        createdOn: '2022-03-03T05:58:16.622Z'
                      - tags:
                          - running
                          - health
                        category: ''
                        points: 811
                        credits: 172
                        player: player-200701
                        name: Susan Smith
                        createdOn: '2022-03-03T05:59:24.752Z'
        '404':
          description: Team not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Teams
    patch:
      description: |
        Updates a team within the given account (partial update). Partial data update allows you to specify
        only certain field to be updated, i.e. if a field is not present in the request, it will not be modified
        on the updated document
      operationId: updateTeam
      summary: Updates a team within the given account
      parameters:
        - $ref: '#/paths/~1teams~1%7Bid%7D/get/parameters/0'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - account
              properties:
                account:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/account'
                id:
                  $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/id'
                description:
                  $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/description'
                imgUrl:
                  $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/imgUrl'
                category:
                  $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/category'
                tags:
                  $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/tags'
                mode:
                  type: string
                  description: |
                    Mode to use for the trigger: 
                    - `set` - player or team count is set to the specified value, setting rewards (points, credits, etc) accordingly
                    - `increment` - the player or team count is incremented by the amount specified in the request
                  default: increment
                  enum:
                    - set
                    - increment
                points:
                  $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/points'
                credits:
                  $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/credits'
                isAvailable:
                  $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
            examples:
              Update Team:
                value:
                  id: a-team
                  name: A-team
                  category: ''
                  tags: running
                  points: 100
                  credits: 0
                  account: docs-for-devs
      responses:
        '200':
          description: Team updated successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - description
                  - imgUrl
                  - category
                  - tags
                  - isAvailable
                  - level
                  - points
                  - credits
                  - createdOn
                properties:
                  id:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/id'
                  name:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/name'
                  description:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/description'
                  imgUrl:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/imgUrl'
                  category:
                    $ref: '#/paths/~1events~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/category'
                  tags:
                    $ref: '#/paths/~1events~1%7Bid%7D~1complete/post/requestBody/content/application~1json/schema/properties/tags'
                  isAvailable:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/isAvailable'
                  level:
                    $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/schema/properties/level'
                  points:
                    type: integer
                    description: Team's point balance
                  credits:
                    type: integer
                    description: Team's credit balance
                  createdOn:
                    type: string
                    description: Time when team was created
              examples:
                Update Team:
                  $ref: '#/paths/~1teams~1%7Bid%7D/get/responses/200/content/application~1json/examples/Get%20Team'
        '400':
          description: Bad request. Check request data.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
        '404':
          description: Team not found.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Teams
    delete:
      description: |
        Deletes the specified team from the given account
      operationId: deleteTeam
      summary: Deletes a team within the given account
      parameters:
        - $ref: '#/paths/~1teams~1%7Bid%7D/get/parameters/0'
        - $ref: '#/paths/~1rules/get/parameters/0'
      responses:
        '204':
          description: Team deleted successfully
      tags:
        - Teams
  /teams/:
    get:
      description: |
        Retrieves all teams within the given account
      operationId: getAllTeams
      summary: Retrieves all teams data within the given account
      parameters:
        - $ref: '#/paths/~1rules/get/parameters/0'
        - $ref: '#/paths/~1events/get/parameters/1'
        - $ref: '#/paths/~1events/get/parameters/2'
        - $ref: '#/paths/~1events/get/parameters/3'
        - $ref: '#/paths/~1prizes/get/parameters/3'
        - name: level
          in: query
          required: false
          description: |
            Specifies the levels by which to filter results. You may specify a comma-separated 
            list of all levels to include and/or exclude (preceding their ID mith a minus sign)
          schema:
            type: string
            default: ''
        - $ref: '#/paths/~1rules/get/parameters/1'
        - $ref: '#/paths/~1rules/get/parameters/2'
      responses:
        '200':
          description: |
            All teams retrieved succesfully
          headers:
            X-Total-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Total-Count'
            X-Limit-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Limit-Count'
            X-Skip-Count:
              $ref: '#/paths/~1rules/get/responses/200/headers/X-Skip-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1teams~1%7Bid%7D/patch/responses/200/content/application~1json/schema'
              examples:
                Get Team:
                  value:
                    - description: Home of the brave!
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/team1.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      points: 1521
                      credits: 178
                      level:
                        id: ''
                        name: ''
                        description: ''
                        imgUrl: ''
                        ordinal: 0
                      id: a-team
                      name: The A-Team
                      createdOn: '2022-03-03T06:00:00.825Z'
                    - description: We are the champions!
                      imgUrl: 'https://images.gamelayer.co/glimages/gltest/team2.png'
                      category: ''
                      tags: []
                      isAvailable: true
                      points: 3
                      credits: 0
                      level:
                        id: ''
                        name: ''
                        description: ''
                        imgUrl: ''
                        ordinal: 0
                      id: b-team
                      name: The B-Squad
                      createdOn: '2022-03-03T06:00:16.892Z'
      tags:
        - Teams
    post:
      description: |
        Creates a team within the given account
      operationId: createTeam
      summary: Creates a team within the given account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - account
                - name
              properties:
                id:
                  type: string
                  description: ID of the team
                account:
                  $ref: '#/paths/~1quizzes~1%7Bid%7D~1start/post/requestBody/content/application~1json/schema/properties/account'
                name:
                  type: string
                  description: Name of the team
                description:
                  type: string
                  description: Team description
                imgUrl:
                  type: string
                  description: URL of the team image
                category:
                  type: string
                  description: 'Category for the team. By default, no category is assigned to the team'
                tags:
                  type: string
                  description: Tags to assign to the team as a comma-separated list
                isAvailable:
                  type: boolean
                  description: |
                    Specifies if the element is available for operations:
                    - `true` - element is available
                    - `false` - element is not available
                level:
                  type: string
                  description: 'Level for the team (level ID). By default, team is assigned to base level.'
                points:
                  type: integer
                  description: Amount of points to grant to the team
                  default: 0
                credits:
                  type: integer
                  description: Amount of credits to grant to the team
                  default: 0
            examples:
              Create Team:
                value:
                  description: Team for the Sales & Marketing folks
                  imgUrl: 'https://images.gamelayer.co/glimages/gltest/team-one.png'
                  category: ''
                  tags: []
                  isAvailable: true
                  points: 0
                  credits: 0
                  level:
                    id: ''
                    name: ''
                    description: ''
                    imgUrl: ''
                    ordinal: 0
                  id: team-sm
                  account: docs-for-devs
                  name: Sales & Marketing
                  createdOn: '2022-03-12T06:43:57.252Z'
      responses:
        '201':
          description: Team successfully created
          content:
            application/json:
              schema:
                $ref: '#/paths/~1teams~1%7Bid%7D/patch/responses/200/content/application~1json/schema'
              examples:
                Create Team:
                  $ref: '#/paths/~1teams~1/post/requestBody/content/application~1json/examples/Create%20Team'
        '400':
          description: Bad request. Check request data.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
        '409':
          description: Team not created. Team exists.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1events/get/responses/404/content/application~1json/schema'
      tags:
        - Teams
components:
  securitySchemes:
    api_key:
      name: api-key
      description: |
        When you sign up for an account, you will be provided with an API key which is used to access your
        organization's GameLayer resources
      type: apiKey
      in: header
